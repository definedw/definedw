<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanchuan&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-21T06:49:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sanchuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>update21</title>
    <link href="http://yoursite.com/2017/05/21/update21/"/>
    <id>http://yoursite.com/2017/05/21/update21/</id>
    <published>2017-05-21T06:48:42.000Z</published>
    <updated>2017-05-21T06:49:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>成功学？</title>
    <link href="http://yoursite.com/2017/05/20/update20/"/>
    <id>http://yoursite.com/2017/05/20/update20/</id>
    <published>2017-05-20T13:38:21.000Z</published>
    <updated>2017-05-21T06:47:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>有时候我常想，为何现在所谓的成功学如此盛行。</p>
<p>只是我一直觉得成功学是个伪命题，世间不会有两条相同的纹路，成功或许可以复制，但想来应该是不能量产的。可是成功学依然还是让人们趋之若鹜，希望成功的人大把大把的在，然而真正能够成功的人却又凤毛棱角。这也许是自然法则的必然结果，在强者同弱者之间必须有一个合理的数量对应关系。但现在大家的成功学锁定的目标都是在物质上的质变，而其余的一切似乎都不再重要。</p>
<p>一个家庭会教育孩子，功成名就、出人头地才是真正的成功，一个学校也会教你，只有成绩优越，才有好的未来，一旦你到了社会，不用人教，在这趟浑水里趟个三五个月，你就知道没钱是万万不能的。所以你必须在有限的时间里，努力完成自己的质变，通往上层社会。</p>
<p>只是很可惜，这个社会似乎每个人都很急，急着完成学业，急着赚钱，急着买房。所以他们很着急成功，当然我也着急成功，眼看老大不小了，一个没钱没房的青年实在是对生活有些恐惧。时间总是不经意间溜走，我会“假装”自己很着急，十分钟的事情压缩成九分钟做，但往往这样的后果并不是很好，我想要看些书，但过不了十分钟我就会想，我所看的这一切究竟有么有什么作用，又或者是一些别的什么乱七八糟的事。</p>
<p>以上看来：<br>一、人把成功学的定义变得更加狭隘；<br>二、人都很着急成功。</p>
<p>有些时间我也会试着去研究那些成功人的一些经验，期望从中找到一条终南捷径。这世界有一些人找到了，比如那些买彩票的，又或者听说那些娶个好媳妇或者嫁个好老公的。他们把所有的目光都投在成功人士的那些光鲜上，也在心里臆想着自己某一天这个时刻。只是太多的时候，很多人都会不服气，就比如说现在一些“小鲜肉”拿着高额片酬，而兢兢业业的老艺术家却得不到应有的尊重。当然我个人对这个问题是说不出个所以然来，只是对一种社会现象的阐述。很多事情，在我无法理解的时候，我一直都劝自己：</p>
<blockquote>
<p>存在即是合理。</p>
</blockquote>
<p>现在有个很特别的词：叫<strong>IP</strong>，好像去年《逻辑思维》跨年演讲上就比较注重讲这个概念，大概的意思是，流量。还有一个比较有意思的事件便是”蹭热点“，大概就是一些”自媒体“借用现在高IP的信息来进行炒作的一种意思。但往往这种炒作都是很恶心的，因为这些事情一般都会超出基本的道德底线，这样的事情对我而言倒也无所谓，只是上次<strong>某乎</strong>有句话说的：<strong>将军孤坟无人问，戏子家事天下知</strong>总让人觉得有几分世态悲凉。</p>
<p>人们都喜欢把成功归结于偶然，所以自己的不努力经常会被忽视。近来我也思考到：也许偶然的事件确实存在，比如说<strong>蓝瘦香菇</strong>，只是很可惜，偶然的事件却基本复制不了。说到底还是因为这个世界浮躁，但最要命的是，有些人却抓住这些人浮躁的心理，来给自己创造利益。我想，浮躁的根源在于这个社会一直都是不肯认真思考，他们都喜欢别人代替自己思考，所以在生活上，他们关注一大堆成功人士的动态，剖析他们优雅的生活姿态以及庞大的资源，但这个在信息上根本不对称。因为你所站的高度实在是与人差了很远，苏先生说的：</p>
<blockquote>
<p>远近高低各不同</p>
</blockquote>
<p>一个人通往成功的路径很多，但大多数都是披荆斩棘。所以从统计学上来讲，若果你真的渴望成功，你必须从最基础的做起，并愿意为此付出巨大的代价。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有时候我常想，为何现在所谓的成功学如此盛行。&lt;/p&gt;
&lt;p&gt;只是我一直觉得成功学是个伪命题，世间不会有两条相同的纹路，成功或许可以复制，但想来应该是不能量产的。可是成功学依
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>初心？</title>
    <link href="http://yoursite.com/2017/05/18/update19/"/>
    <id>http://yoursite.com/2017/05/18/update19/</id>
    <published>2017-05-18T03:07:23.000Z</published>
    <updated>2017-05-20T13:37:51.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>年岁逝去，竟然连几句煽情的话都说不好了。</p>
<p>一直在劝自己把日子过得简单点，只是事到临头还是觉得简单的生活并不如当初想的那么简单。所以生活在这样的死循环里周而复始，但却无可奈何。以后的日子还很长，一直觉得如果按照现在的状态下去，或许以后的日子只会更加难过。当然我也不是没想办法，努力让自己适应这些所谓成长的妥协，努力让自己心怀感恩，努力温柔对待世界。但很多时候却是很快又会抛诸脑后，很搞笑，也很现实。</p>
<p>至少庆幸，自己没有活在鲁先生所说的吃人的社会，但有时候我也在臆想，现在这个社会虽然有法律来保护这些弱者，让其能够保持最基本的生活姿态。只要你肯努力，你就至少还是饿不死的。但我想了很多，内心还是强大不起来，未来的一切都让我感到恐惧，当人恐惧的时候就很容易犯错误。所以我在生活上也选择尽量少暴露自己的缺点，与人习惯保持距离。</p>
<p>虽然在生活上确实可以满足自我的温饱，但这样是不够的。我想在这样的社会里，如同父辈期待的出人头地、光耀门楣，这是他们几代人交给我的任务，也是这个社会无形中的默契。大家都希望自己挣破脑袋去上层社会，只是结局自然是及其残酷的，所以怨天尤人也就不见得那么难以理解。</p>
<p>但人能在这样的社会里失去初心吗？<br>可能我现在还在这里讨论这些话题，在某些人的眼里终归是显得有些幼稚。我可能对这些外在的评论也很在乎，模糊记得鲁先生说过的：不介意以最恶毒的心态去揣测周边的人，我想现在也是有些道理的。社会太多底层的人在通往上层社会的时候，不可避免的遇到道德同良心上的阻挠。我也不知道自己能不能在巨大的利益面前保持足够的冷静，所以我一直尽量克制自己不要在某些自己做不到的领域去苛责别人，但是，虽然我是怀着美好的初衷前行，但也许别人对我就不那么仁慈了。</p>
<p>我不是说这个世界不温柔，但是我们还是需要学会保护自己。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;年岁逝去，竟然连几句煽情的话都说不好了。&lt;/p&gt;
&lt;p&gt;一直在劝自己把日子过得简单点，只是事到临头还是觉得简单的生活并不如当初想的那么简单。所以生活在这样的死循环里周而复始
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>响应式设计（译文）</title>
    <link href="http://yoursite.com/2017/05/17/update18/"/>
    <id>http://yoursite.com/2017/05/17/update18/</id>
    <published>2017-05-17T07:05:41.000Z</published>
    <updated>2017-05-17T07:06:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>译者：Silence_wh<br>链接：<a href="http://www.zcfy.cc/article/reactive-web-design-the-secret-to-building-web-apps-that-feel-amazing-2751.html?qqdrflag=054bc" target="_blank" rel="external">http://www.zcfy.cc/article/reactive-web-design-the-secret-to-building-web-apps-that-feel-amazing-2751.html?qqdrflag=054bc</a><br>来源：众成翻译<br>原文链接：<a href="https://medium.com/@owencm/reactive-web-design-the-secret-to-building-web-apps-that-feel-amazing-b5cbfe9b7c50" target="_blank" rel="external">https://medium.com/@owencm/reactive-web-design-the-secret-to-building-web-apps-that-feel-amazing-b5cbfe9b7c50</a></p>
</blockquote>
<p>在去年，我发现一些开发者通过使用==两个==巧妙的技巧，将一个使用起来缓慢阻塞的 web app 变得非常灵活和优雅。</p>
<p>我相信这些技术足够重要到需要一个名字来表示：<strong>响应式 web 设计。</strong></p>
<p>总的来说，响应式 web 设计是这样一种建站技术的集合：用户访问网站时始终觉得交互很快和舒适，尽管是在网络缓慢或者是有延迟的情况下。</p>
<p>作为 web 开发者和架构师，为了改善 web 上的用户体验和性能表现，我相信找到方法使我们做的东西默认达到这样的模式，是比较重要的。</p>
<h3 id="方案1：优先加载页面的骨架"><a href="#方案1：优先加载页面的骨架" class="headerlink" title="方案1：优先加载页面的骨架"></a>方案1：优先加载页面的骨架</h3><p>使用得当的话，这项技术几乎不会被注意到，但是它却可以大大地改善一个网站的性能表现。</p>
<p>有趣的是，这项技术被几乎所有的原生app使用，使得用户感觉非常舒适即使是在网络条件恶劣的情况下。但是这项技术却几乎没有使用在web开发上！</p>
<p>机会来了！💡</p>
<p>简单来说，展示页面骨架确保无论何时用户点击了哪一个按钮或者是链接，页面都能够立即响应将用户带到新的页面。并且页面会处于加载中直到页面上的内容可以访问。</p>
<p><img src="http://p0.qhimg.com/t018c149a7175e8f8ed.png" alt="1"></p>
<p>Facebook 使用优先展示页面骨架技术，去改善第一次打开应用的性能表现。</p>
<p>展示页面骨架是一项关键的改善性能表现的技术，它能够使得应用感觉很快，并且能够显著减少用户产生以下的疑问：</p>
<blockquote>
<blockquote>
<p>正在发生什么？它是否正在加载？我操作正确了吗？ 🤔</p>
</blockquote>
</blockquote>
<p>Flipkart.com 是一个稀有的使用该技术的网站例子。因此不管是浏览分类或者是点击查看产品详情，都感觉非常的快，尽管实际的结果需要等待几秒钟的加载时间：</p>
<p><img src="http://p0.qhimg.com/t01893ca34136b3daa9.gif" alt="2"></p>
<p>这是一张flipkart.com在安卓手机上，单独从主屏幕启动的屏幕截图。</p>
<p>这项技术运用地更好的例子是，已经准备好的内容比如缩略图或者是文章标题可以被重用，来进一步改善性能表现，使得加载迅速可见。</p>
<p><img src="http://p0.qhimg.com/t01094100a2539bac16.gif" alt="3"></p>
<p>app.jalantikus.com 在页面过渡中，优先展示页面骨架并且重用了文章标题和缩略图。</p>
<p>测试使用页面骨架技术的网站</p>
<p>测试使用这项技术的网站表现是简单的：只需要使用 Chrome 浏览器的网络仿真功能去使得网速尽可能地慢，然后再在网站里进行各种操作。如果网站较好地使用这项技术的话，你在网站里的交互依旧会流畅和反应敏捷。</p>
<p><img src="http://p0.qhimg.com/t01b80ce28323d048e8.png" alt="4"></p>
<p>Chrome 浏览器网络仿真支持的最慢网速</p>
<h3 id="方案2：通过预先确定网站元素尺寸的“稳定加载”"><a href="#方案2：通过预先确定网站元素尺寸的“稳定加载”" class="headerlink" title="方案2：通过预先确定网站元素尺寸的“稳定加载”"></a>方案2：通过预先确定网站元素尺寸的“稳定加载”</h3><p>你明白那种你将要使用的网站，页面却跳来跳去的感觉吗？就是那种你正要阅读的一篇文章文字却一直在移动？这就是所谓的“不稳定加载”，我们需要将它们消灭。</p>
<p><img src="http://p0.qhimg.com/t01a0856a151d3b6984.gif" alt="5"></p>
<p>slate.com 在页面加载时内容抖动的特别严重。你所处的网络越慢，页面抖动的时间越长。</p>
<p>不稳定加载使得网站很难去交互，而且使得它们非常地不稳定！</p>
<p><img src="http://p0.qhimg.com/t018efc49e1d99e27c6.gif" alt="6"></p>
<p>浏览一个不稳定的网站经常使我联想到在地震中走来走去的那种感觉</p>
<p>不稳定加载是由不包含任何尺寸信息的图片和广告嵌入到页面中引起的。浏览器默认只知道那些它们已经加载的内容的尺寸，所以一旦图片加载完成，咚！，整个页面就滑下去了。</p>
<p>为了防止这样的情况，页面中所有的标签都必须主动地包括它们即将要包含的图片的尺寸信息。</p>
<p>大部分情况下，特定页面使用的图片都是相同的尺寸，因此这些尺寸信息可以包括在 HTML 模板里面。但是有些情况下，这些图片的尺寸是动态地。因此它们的尺寸需要在加载完成之后计算得来，创建完成之后再嵌入到 HTML 里面。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Always include sizes on images to prevent unstable loads --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'/thumbnail.png'</span> <span class="attr">style</span>=<span class="string">'width: 100px; height: 84px'</span>&gt;</span></div></pre></td></tr></table></figure>
<p>同样的方法适用于广告，它通常是不稳定加载的罪魁祸首。在任何可能出现广告的地方，创建一个即将包含广告的 div 标签。然后尽可能地猜出这个广告会多大，将该尺寸信息设置到你的模板里面。</p>
<p>需要注意的是，在网速慢的情况下，不稳定加载处于最坏的模式。在你刚要准备阅读的时候，页面会突然地抖动，并且你不能完全确定处于安全模式中。</p>
<p><strong>放在一起比较</strong></p>
<p>我在 reactive.surge.sh 上面做了一个小的示例，来演示传统 web 和 响应式 web 设计之间的区别。</p>
<p>传统的内容加载</p>
<p><img src="http://p0.qhimg.com/t0119242924e5985c93.gif" alt="7"></p>
<p>页面跳动使人感觉缓慢和烦躁。有趣的是，我发现在移动设备上点击屏幕并且看不见反应时的情况下，会更加使人觉得烦躁。</p>
<p>响应式 web 设计的内容加载</p>
<p><img src="http://p0.qhimg.com/t01d95110a163ac3a68.gif" alt="8"></p>
<p>在响应式 web 设计下，加载会很迅速并且在多次点击返回按钮和文章标题的情况下，网站依旧能够响应。</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>在页面切换受阻并且页面进行多次跳动的情况下，网速越慢，用户体验越差。</p>
<p>即使是在网络很慢和令人不快的情况下，通过响应式 web 设计(“响应式设计”这个名字已经被使用了！)，我们都能够使得用户的体验更加轻快和响应式的。</p>
<p>我想听听社区中关于譬如参与度和收入等KPI中产生实际影响的数据。</p>
<p>除此之外，我鼓励框架和库的作者考虑将优先展示页面骨架和稳定加载技术变成默认，就和pit of success一样。</p>
<p>如果你对此有想法，请在推特上给我留言 @owencm，并且喜欢的话就请给我点赞！</p>
<p>P.s. 确保已经在移动设备上查看过示例网站 reactive.surge.sh，这是它莫大的荣幸！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;译者：Silence_wh&lt;br&gt;链接：&lt;a href=&quot;http://www.zcfy.cc/article/reactive-web-design-the-secret-to-building-web-apps-that-feel-amazin
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>我记得</title>
    <link href="http://yoursite.com/2017/05/16/update17/"/>
    <id>http://yoursite.com/2017/05/16/update17/</id>
    <published>2017-05-16T03:05:01.000Z</published>
    <updated>2017-05-16T15:08:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>很多时候，都会自己替自己做一些决定。</p>
<p>当然这些决定不一定都执行得很好，我在每件事情上所花费的时间自然是不一样的，另外随着自己所处的环境改变也会影响我对自己决定的执行。</p>
<p>我明白很多时候，人需要自我审视。虽然我在这世间所度过的时间还是比较少，在经验这方面有所缺失。但觉得这些年来自己最缺失的其实并不是所谓的勇气，而是一种判断力。在离开舒适的环境后，我一直不能冷静思考，每天都像一个很忙的人，但真实的情况是我对什么都有些无所适从。</p>
<p>我考虑过这方面很多，但一直都得不到我想要的结果。当然，也有可能在某天其实我已经得到了正确的解答，只不过我自己没有意识罢了。这种不确定的未来，总会给我很多迷茫，但我想这只怕不是我退缩的理由。想来我这么多年来一直比较忽视的一部分就是细节，虽然我一直劝自己要注重细节。但从下意识里，我还是无法控制自己。</p>
<p>每天都在得到知识的片段，每天也在失去一些片段。这些碎片化的知识总是很容易让自己在判断力上形成一种犹豫，给你一种错觉。好像一种事物是有很多的答案的样子，也许从统计学上来说，事物并没有绝对的概念。不知不觉自己又绕进去了，这样的意识判断，总会有很多麻烦，虽然说是一些小事，但总归会影响你在大体事物上的判断。</p>
<p>出门在外我才发现，自己越来越佩服那些能够一如既往坚持的人。所以我一直努力劝自己，不要随波逐流。原来有段时间我认为随波逐流是件无可厚非的事情，因为就像太极里说的，只有圆润才能得以安静于世间。只是我的内心并不是安静的心情，所以这种意识，会给我的生活带来很大的不便。</p>
<p>说到太极，我已经想学太极拳有一段时间了，但一直没有时间实践下去。为何一个年轻人需要喜欢太极，这其实并没有什么深层次的道理。因为从本质上来说，我开始发现周边世界对传统开始展现出一种尊重的态度，而我也希望自己能够在传统的意识里找到自己的一点立足之地。虽然我不知道太极的优点，或者说它的精神。但我想可以试着从模仿开始去了解，这也许是个不错的方式。 </p>
<p>这一年来我，我也尽量希望自己在自己的路上慢一点前行。虽然慢同这个时代的主旋律格格不入，但我总觉得这才是我性格里的东西。我希望自己在这个急功近利的世界里，慢一点，都一点时间来思考自己要走的下一步，虽然很可惜至今我仍然没有找到那种让自己心平气和的方法，但我发现在小事上有条不紊，确实可以在生活其余的细节上有些帮助。</p>
<p>生活并非一成不变的旅途，如果在心里不甘寂寞的时候无法忍受，以前的我或许会选择来做一些让人比较难以理解的事情来排解，只是现在我更趋近于忍受。可能这种忍受，已经开始被我自认为傅雷所讲的体会孤独。</p>
<p>希望孤独让我得以成长！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很多时候，都会自己替自己做一些决定。&lt;/p&gt;
&lt;p&gt;当然这些决定不一定都执行得很好，我在每件事情上所花费的时间自然是不一样的，另外随着自己所处的环境改变也会影响我对自己决定
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>移动输入框填坑系列</title>
    <link href="http://yoursite.com/2017/05/16/update16/"/>
    <id>http://yoursite.com/2017/05/16/update16/</id>
    <published>2017-05-16T02:50:20.000Z</published>
    <updated>2017-05-16T03:07:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作者：yana@alloyteam<br>链接：<a href="https://www.qcloud.com/community/article/584124" target="_blank" rel="external">https://www.qcloud.com/community/article/584124</a><br>来源：腾讯云</p>
</blockquote>
<p>输入在移动端是一个很常用的功能，那么输入框必然是一个很重要的部分。然而，移动端输入框总会遇到各种各样的问题，无论是样式还是ios和android两端体验不一致都是很让我们头疼的问题，那么如何使移动web的输入框体验更贴近原生也成了一个需要我们多多思考和研究的问题。</p>
<h3 id="一、文字输入限制"><a href="#一、文字输入限制" class="headerlink" title="一、文字输入限制"></a>一、文字输入限制</h3><p>我们拿最多可输入16个字为例。当输入字数（注意，不是字符长度）超过16字时，会触发tips提示，并且不能继续输入。<br>办法一：<br>textarea可以使用maxlength进行输入字数限制。<br>但是这个办法只能单纯的限制length，有时并不能真正的结局问题。<br>办法二：<br>在将第二个办法之前先来讲讲下面的几种情况：<br><strong>1、非直接的文字输入</strong><br>什么叫做非直接的文字输入呢？</p>
<p><img src="http://www.alloyteam.com/wp-content/uploads/2017/03/%E9%9D%9E%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%85%A5.gif" alt="1"></p>
<p>当输入汉字时必然会是非直接输入，需要我们点选才能正式输入。<br>当我们字数限制为16个字，需要实时检查是否到16字。输入文字时，当有非直接的文字输入时，监听keydown事件和input事件都会直接触发判断字数逻辑，会截断我们正在输入的文字。<br>解决办法：<br>监听compositionend（当直接的文字输入时触发）这时，当没选中中文的时候不会进行字数判断。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#input'</span>).on(<span class="string">'compositionend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> len = $(<span class="keyword">this</span>).val().length;</div><div class="line">        <span class="keyword">if</span> (len &gt; <span class="number">16</span>) &#123;</div><div class="line">            <span class="comment">// 提示超过16字</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<p><strong>2、emoji表情的输入</strong></p>
<p>当输入emoji的时候，但是，当输入emoji表情的时候，js中判断emoji表情的length为2，因此emoji正常应该最多只能输入8个，但是ios端却把emoji的length算为1，可以输入16个emoji。这样就导致了两端的体验不同。因此需要在js中来进行字数限制。<br>再加上汉字输入问题，那么就加入一个标记位，来判断是否是直接的文字输入。然后监听input，限制字数，当超过字数限制的时候，把前16个字截断显示出来就ok了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cpLock;</div><div class="line">$(<span class="string">'#input'</span>).on(<span class="string">'compositionstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    cpLock = <span class="literal">true</span>；</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#input'</span>).on(<span class="string">'compositionend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    cpLock = <span class="literal">false</span>;</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#input'</span>).on(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!cpLock) &#123;</div><div class="line">        <span class="keyword">if</span> (e.target.value.length - <span class="number">17</span> &gt;=<span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">var</span> txt = $(e.target).val().substring(<span class="number">0</span>, <span class="number">16</span>);</div><div class="line">            $(e.target).val(txt);</div><div class="line">            <span class="comment">// 超过16字提示</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="二、textarea置底显示问题"><a href="#二、textarea置底显示问题" class="headerlink" title="二、textarea置底显示问题"></a>二、textarea置底显示问题</h3><p>ios中的输入体验永远伴随着一个问题，就是当唤起键盘后，整个页面会被键盘压缩，也就是说页面的高度变小，并且所有的fixed全部变为了absolute。<br>android效果：</p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200205641_2166_1493200205692.png" alt="2"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200218789_3178_1493200218749.jpg" alt="3"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200253851_4072_1493200253802.png" alt="4"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200262513_4775_1493200262456.jpg" alt="5"></p>
<p>使用fixed定位<br>可见android中唤起键盘是覆盖在页面上，不会压缩页面<br>在ios上的效果：</p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200279779_2768_1493200279852.png" alt="6"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200290064_1181_1493200289998.png" alt="7"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200297450_9854_1493200297374.png" alt="8"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200304786_3590_1493200304711.png" alt="9"></p>
<p>那么如果我们需要将<strong>输入框固定在屏幕下方，而当键盘被唤起同时输入框固定在键盘</strong>上方（如下图样式）该如何解决呢？</p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200316198_2673_1493200316136.png" alt="10"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200335879_152_1493200335845.png" alt="11"></p>
<p><img src="https://blog-10039692.file.myqcloud.com/1493200345107_9274_1493200345062.png" alt="12"></p>
<p>可以看出，键盘会将页面顶上去。那么如果希望可以将输入框和键盘完全贴合，我们可以使用div模拟一个假的输入框，使用定位将真正的输入框隐藏掉，当点击假的输入框的时候，将真正的输入框定位到键盘上方，并且手动获取输入框焦点。</p>
<p>在实现过程中需要注意下面几个问题：</p>
<p><strong>1、真正的输入框的位置计算：</strong></p>
<p>首先记录无键盘时的window.innerHeight，当键盘弹出后再获取当前的window.innerHeight，两者的差值即为键盘的高度，那么定位真输入框自然就很容易了</p>
<p><strong>2、在ios下手动获取焦点不可以用click事件，需要使用tap事件才可以手动触发</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#fake-input'</span>).on($.os.ios?<span class="string">'tap'</span> : <span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        initHeight = <span class="built_in">window</span>.innerHeight;</div><div class="line">        $(<span class="string">'#input'</span>).focus();</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<p><strong>3、当键盘收起的时候我们需要将真输入框再次隐藏掉，除了使用失去焦点（blur）方法，还有什么方法可以判断键盘是否收起呢？</strong></p>
<p>这里可以使用setInterval监听，当当前window.innerHeight和整屏高度相等的时候判断为键盘收起。<br><strong>注意：</strong>键盘弹起需要一点时间，所以计算当前屏幕高度也需要使用setInterval</p>
<p><strong>4、因为textarea中的文字不能置底显示，当输入超过一行textarea需要自动调整高度，</strong>因此将scrollHeight赋值给textarea的height。当删除文字的时候需要height也有变化，因此每次input都先将height置0，然后再赋值。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#textarea'</span>).css(<span class="string">'height'</span>, <span class="number">0</span>);</div><div class="line">    $(<span class="string">'#textarea'</span>).css(<span class="string">'height'</span>, $(<span class="string">'#textarea'</span>)[<span class="number">0</span>].scrollHeight);</div></pre></td></tr></table></figure>
<p>未完待续…</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者：yana@alloyteam&lt;br&gt;链接：&lt;a href=&quot;https://www.qcloud.com/community/article/584124&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS渐变</title>
    <link href="http://yoursite.com/2017/05/15/update15/"/>
    <id>http://yoursite.com/2017/05/15/update15/</id>
    <published>2017-05-15T07:41:17.000Z</published>
    <updated>2017-05-16T02:50:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作者：valar_cC<br>链接：<a href="http://www.jianshu.com/p/3b9c19746d6c" target="_blank" rel="external">http://www.jianshu.com/p/3b9c19746d6c</a><br>来源：简书</p>
</blockquote>
<h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><p><code>linear-gradient(90deg,red 20%,blue 50%,yellow 80%);</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-8c79e7ec3e7433e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>很显然通过这张图，你会大概的明白设置这些参数的作用。虽然我并没有用什么文字去解释它。（所以当你看不明白定义的时候，一定要实践。）<br>接下来，我们要搞点事情。我们将颜色的分隔点重叠。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">height</span>: 200<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(90<span class="selector-tag">deg</span>,<span class="selector-tag">blue</span> 100<span class="selector-tag">px</span>,<span class="selector-id">#fff</span> 100<span class="selector-tag">px</span>,<span class="selector-id">#fff</span> 200<span class="selector-tag">px</span>,<span class="selector-tag">red</span> 200<span class="selector-tag">px</span>);</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-16eab0f37a7575be.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="images"></p>
<p>没错这就是上述渐变代码产生的效果，是不是感觉打破你以前对渐变的印象。<br>下面我们利用linear-gradient实现更酷的效果，比如:</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-14621e5f69dbdece.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image1"></p>
<p>是不是感觉已经突破自己对渐变的认识。让我来说一下实现这个背景的思路：这是个有规律的图案，我们要找到它的基本图案，我相信你已经找到了。<br>我们需要用到的知识点：</p>
<ul>
<li>background支持声明多个linear-gradient，通过逗号分隔；</li>
<li>当你声明多个linear-gradient，最先声明的，离用户越近。（这里就需要我们考虑遮盖的问题，一般采用transparent）；</li>
<li>还没掌握background的简写方式，可是不行的哦；</li>
<li>background-repeat、background-size和background-position的合理结合。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">width: 410px;</div><div class="line">height: 410px;</div><div class="line">background: linear-gradient(rgb(2,222,222) 10px, transparent 10px) repeat left top / 40px,</div><div class="line">            linear-gradient(90deg,rgb(2,222,222) 10px, transparent 10px) repeat left top / 40px;</div></pre></td></tr></table></figure>
<p>你看看，以前实现这样的效果，我们只能苦苦哀求美工切图，现在在CSS3的浪潮中，我们可以自给自足（^_^）。<br>而且通过渐变我们可以实现背景颜色的动画，而不需要消耗额外的HTML元素达到我们预期的效果。例子：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-708595a213206216.gif?imageMogr2/auto-orient/strip" alt="image2"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@mixin menuaction($color) &#123;</div><div class="line">        background: linear-gradient($color 100%, transparent 100%) no-repeat center bottom / 100% 10%;</div><div class="line">        &amp;:hover &#123;</div><div class="line">            background-size: 100% 100%;</div><div class="line">            color: #fff;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h3><p>基本上径向渐变与线性渐变差不多，只不过它是由中心点向外扩散。所以我这里就不再赘述。<br>话不多说，先画个同心圆：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-d518dca3db7dbc35.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image3"></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">border-radius</span>: 50%;</div><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span>,<span class="selector-tag">rgb</span>(22,222,111) 0,<span class="selector-tag">rgb</span>(22,222,111) 50<span class="selector-tag">px</span>,<span class="selector-tag">red</span> 50<span class="selector-tag">px</span>,<span class="selector-tag">red</span> 100<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(222,222,1) 100<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(222,222,1) 150<span class="selector-tag">px</span>,<span class="selector-tag">rgb</span>(222,2,111) 150<span class="selector-tag">px</span>);</div></pre></td></tr></table></figure>
<p>最后以什么结束呢，哈哈最近各种优惠券，那我们用渐变的知识来搞张优惠券吧：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1880075-23ba21064bfa2145.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image4"></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">height</span>: 120<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">transparent</span> 0, <span class="selector-tag">transparent</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 5<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-id">#fff</span> 0, <span class="selector-id">#fff</span> 10<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 10<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">radial-gradient</span>(<span class="selector-id">#fff</span> 0, <span class="selector-id">#fff</span> 10<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 10<span class="selector-tag">px</span>) <span class="selector-tag">no-repeat</span>,</div><div class="line">            <span class="selector-tag">linear-gradient</span>(90<span class="selector-tag">deg</span>,<span class="selector-tag">transparent</span> 10<span class="selector-tag">px</span>, <span class="selector-tag">rgb</span>(247,245,201) 10<span class="selector-tag">px</span>);</div><div class="line">        <span class="selector-tag">background-size</span>: 20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>,60<span class="selector-tag">px</span> 60<span class="selector-tag">px</span>,60<span class="selector-tag">px</span> 60<span class="selector-tag">px</span>,100% 100%;</div><div class="line">        <span class="selector-tag">background-position</span>: <span class="selector-tag">-10px</span> 0,<span class="selector-tag">-10px</span> 20<span class="selector-tag">px</span>,<span class="selector-tag">-10px</span> 40<span class="selector-tag">px</span>,<span class="selector-tag">-10px</span> 60<span class="selector-tag">px</span>,<span class="selector-tag">-10px</span> 80<span class="selector-tag">px</span>,<span class="selector-tag">-10px</span> 100<span class="selector-tag">px</span>,60<span class="selector-tag">px</span> <span class="selector-tag">-30px</span>,60<span class="selector-tag">px</span> 90<span class="selector-tag">px</span>,<span class="selector-tag">left</span> <span class="selector-tag">center</span>;</div></pre></td></tr></table></figure>
<p>上面代码应该把size和position放在简写属性里（我就不改了。。。），到此大家应该会对渐变有个新的理解吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者：valar_cC&lt;br&gt;链接：&lt;a href=&quot;http://www.jianshu.com/p/3b9c19746d6c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/3b
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>是少了点什么吧</title>
    <link href="http://yoursite.com/2017/05/15/update14/"/>
    <id>http://yoursite.com/2017/05/15/update14/</id>
    <published>2017-05-15T07:19:02.000Z</published>
    <updated>2017-05-15T07:40:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>月光会溜走，云彩会消失，时光会逝去，而你会离开我。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;月光会溜走，云彩会消失，时光会逝去，而你会离开我。&lt;/p&gt;

    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>大公司怎么部署前端代码</title>
    <link href="http://yoursite.com/2017/05/12/update13/"/>
    <id>http://yoursite.com/2017/05/12/update13/</id>
    <published>2017-05-12T01:33:51.000Z</published>
    <updated>2017-05-12T07:32:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>来源：GitHub<br>作者：fouber<br>链接：<a href="https://github.com/fouber/blog/issues/6" target="_blank" rel="external">https://github.com/fouber/blog/issues/6</a></p>
</blockquote>
<p>这是一个非常有趣的 <strong>非主流前端领域</strong>，这个领域要探索的是如何用工程手段解决前端开发和部署优化的综合问题，入行到现在一直在学习和实践中。</p>
<p>在我的印象中，facebook是这个领域的鼻祖，有兴趣、有梯子的同学可以去看看facebook的页面源代码，体会一下什么叫工程化。</p>
<p>接下来，我想从原理展开讲述，多图，较长，希望能有耐心看完。</p>
<hr>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/01.png" alt="1"></p>
<p>让我们返璞归真，从原始的前端开发讲起。上图是一个“可爱”的index.html页面和它的样式文件a.css，用文本编辑器写代码，无需编译，本地预览，确认OK，丢到服务器，等待用户访问。前端就是这么简单，好好玩啊，门槛好低啊，分分钟学会有木有！</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/02.png" alt="2"></p>
<p>然后我们访问页面，看到效果，再查看一下网络请求，200！不错，太™完美了！那么，研发完成。。。。了么？</p>
<p>等等，这还没完呢！对于大公司来说，那些变态的访问量和性能指标，将会让前端一点也不“好玩”。</p>
<p>看看那个a.css的请求吧，如果每次用户访问页面都要加载，是不是很影响性能，很浪费带宽啊，我们希望最好这样：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/03.png" alt="3"></p>
<p>利用304，让浏览器使用本地缓存。但，这样也就够了吗？不成！304叫协商缓存，这玩意还是要和服务器通信一次，我们的优化级别是变态级，所以必须彻底灭掉这个请求，变成这样：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/04.png" alt="4"></p>
<p>强制浏览器使用本地缓存（cache-control/expires），不要和服务器通信。好了，请求方面的优化已经达到变态级别，那问题来了：你都不让浏览器发资源请求了，这缓存咋更新？</p>
<p>很好，相信有人想到了办法：<strong>通过更新页面中引用的资源路径，让浏览器主动放弃缓存，加载新资源。</strong>好像这样：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/05.png" alt="5"></p>
<p>下次上线，把链接地址改成新的版本，就更新资源了不是。OK，问题解决了么？！当然没有！大公司的变态又来了，思考这种情况：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/07.png" alt="6"></p>
<p>页面引用了3个css，而某次上线只改了其中的a.css，如果所有链接都更新版本，就会导致b.css，c.css的缓存也失效，那岂不是又有浪费了？！</p>
<p>重新开启变态模式，我们不难发现，要解决这种问题，必须让url的修改与文件内容关联，也就是说，只有文件内容变化，才会导致相应url的变更，从而实现文件级别的精确缓存控制。</p>
<p>什么东西与文件内容相关呢？我们会很自然的联想到利用 <a href="http://baike.baidu.com/view/10961371.htm" target="_blank" rel="external">数据摘要要算法</a> 对文件求摘要信息，摘要信息与文件内容一一对应，就有了一种可以精确到单个文件粒度的缓存控制依据了。好了，我们把url改成带摘要信息的：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/08.png" alt="7"></p>
<p>这回再有文件修改，就只更新那个文件对应的url了，想到这里貌似很完美了。你觉得这就够了么？大公司告诉你：图样图森破！</p>
<p>唉~~~~，让我喘口气</p>
<p>现代互联网企业，为了进一步提升网站性能，会把静态资源和动态网页分集群部署，静态资源会被部署到CDN节点上，网页中引用的资源也会变成对应的部署路径：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/09.png" alt="8"></p>
<p>好了，当我要更新静态资源的时候，同时也会更新html中的引用吧，就好像这样：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/10.png" alt="9"></p>
<p>这次发布，同时改了页面结构和样式，也更新了静态资源对应的url地址，现在要发布代码上线，亲爱的前端研发同学，你来告诉我，咱们是先上线页面，还是先上线静态资源？</p>
<ol>
<li><strong>先部署页面，再部署资源：</strong>在二者部署的时间间隔内，如果有用户访问页面，就会在新的页面结构中加载旧的资源，并且把这个旧版本的资源当做新版本缓存起来，其结果就是：用户访问到了一个样式错乱的页面，除非手动刷新，否则在资源缓存过期之前，页面会一直执行错误。</li>
<li><strong>先部署资源，再部署页面：</strong>在部署时间间隔之内，有旧版本资源本地缓存的用户访问网站，由于请求的页面是旧版本的，资源引用没有改变，浏览器将直接使用本地缓存，这种情况下页面展现正常；但没有本地缓存或者缓存过期的用户访问网站，就会出现旧版本页面加载新版本资源的情况，导致页面执行错误，但当页面完成部署，这部分用户再次访问页面又会恢复正常了。</li>
</ol>
<p>好的，上面一坨分析想说的就是：先部署谁都不成！都会导致部署过程中发生页面错乱的问题。所以，访问量不大的项目，可以让研发同学苦逼一把，等到半夜偷偷上线，先上静态资源，再部署页面，看起来问题少一些。</p>
<p>但是，大公司超变态，没有这样的“绝对低峰期”，只有“相对低峰期”。So，为了稳定的服务，还得继续追求极致啊！</p>
<p>这个奇葩问题，起源于资源的 覆盖式发布，用 待发布资源 覆盖 已发布资源，就有这种问题。解决它也好办，就是实现 非覆盖式发布。</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/11.png" alt="10"></p>
<p>看上图，用文件的摘要信息来对资源文件进行重命名，把摘要信息放到资源文件发布路径中，这样，内容有修改的资源就变成了一个新的文件发布到线上，不会覆盖已有的资源文件。上线过程中，先全量部署静态资源，再灰度部署页面，整个问题就比较完美的解决了。</p>
<p>所以，大公司的静态资源优化方案，基本上要实现这么几个东西：</p>
<blockquote>
<blockquote>
<ol>
<li>配置超长时间的本地缓存 —— 节省带宽，提高性能</li>
<li>采用内容摘要作为缓存更新依据 —— 精确的缓存控制</li>
<li>静态资源CDN部署 —— 优化网络请求</li>
<li>更资源发布路径实现非覆盖式发布 —— 平滑升级</li>
</ol>
</blockquote>
</blockquote>
<p>全套做下来，就是相对比较完整的静态资源缓存控制方案了，而且，还要注意的是，静态资源的缓存控制要求在 前端所有静态资源加载的位置都要做这样的处理 。是的，所有！什么js、css自不必说，还要包括js、css文件中引用的资源路径，由于涉及到摘要信息，引用资源的摘要信息也会引起引用文件本身的内容改变，从而形成级联的摘要变化，大概示意图就是：</p>
<p><img src="https://raw.githubusercontent.com/fouber/blog/master/assets/resource/14.png" alt="11"></p>
<p>好了，目前我们快速的学习了一下前端工程中关于静态资源缓存要面临的优化和部署问题，新的问题又来了：这™让工程师怎么写码啊！！！</p>
<p>要解释优化与工程的结合处理思路，又会扯出一堆有关模块化开发、资源加载、请求合并、前端框架等等的工程问题，以上只是开了个头，解决方案才是精髓，但要说的太多太多，有空再慢慢展开吧。</p>
<blockquote>
<p>总之，前端性能优化绝逼是一个工程问题！</p>
</blockquote>
<p>以上不是我YY的，可以观察 百度 或者 facebook 的页面以及静态资源源代码，查看它们的资源引用路径处理，以及网络请中静态资源的缓存控制部分。再次赞叹facebook的前端工程建设水平，跪舔了。</p>
<p>建议前端工程师多多关注前端工程领域，也许有人会觉得自己的产品很小，不用这么变态，但很有可能说不定某天你就需要做出这样的改变了。而且，如果我们能把事情做得更极致，为什么不去做呢？</p>
<p>另外，也不要觉得这些是运维或者后端工程师要解决的问题。如果由其他角色来解决，大家总是把自己不关心的问题丢给别人，那么前端工程师的开发过程将受到极大的限制，这种情况甚至在某些大公司都不少见！</p>
<p>妈妈，我再也不玩前端了。。。。5555</p>
<h2 id="业界实践"><a href="#业界实践" class="headerlink" title="业界实践"></a>业界实践</h2><h5 id="Assets-Pipeline"><a href="#Assets-Pipeline" class="headerlink" title="Assets Pipeline"></a>Assets Pipeline</h5><p>Rails中的Assets Pipeline完成了以上所说的优化细节，对整个静态资源的管理上的设计思考也是如此，了解rails的人也可以把此答案当做是对rails中assets pipeline设计原理的分析。</p>
<p>rails通过把静态资源变成erb模板文件，然后加入&lt;%= asset_path ‘image.png’ %&gt;，上线前预编译完成处理，fis的实现思路跟这个几乎完全一样，但我们当初确实不知道有rails的这套方案存在。</p>
<p>相关资料：</p>
<ul>
<li>英文版：<a href="http://guides.rubyonrails.org/asset_pipeline.html" target="_blank" rel="external">http://guides.rubyonrails.org/asset_pipeline.html</a></li>
<li>中文版：<a href="http://guides.ruby-china.org/asset_pipeline.html" target="_blank" rel="external">http://guides.ruby-china.org/asset_pipeline.html</a></li>
</ul>
<h5 id="FIS的解决方案"><a href="#FIS的解决方案" class="headerlink" title="FIS的解决方案"></a>FIS的解决方案</h5><p>用 F.I.S 包装了一个小工具，完整实现整个回答所说的最佳部署方案，并提供了源码对照，可以感受一下项目源码和部署代码的对照。</p>
<ul>
<li>源码项目：<a href="https://github.com/fouber/static-resource-digest-project" target="_blank" rel="external">https://github.com/fouber/static-resource-digest-project</a></li>
<li>部署项目：<a href="https://github.com/fouber/static-resource-digest-project-release" target="_blank" rel="external">https://github.com/fouber/static-resource-digest-project-release</a></li>
</ul>
<p>部署项目可以理解为线上发布后的结果，可以在部署项目里查看所有资源引用的md5化处理。</p>
<p>这个示例也可以用于和assets pipeline做比较。fis没有assets的目录规范约束，而且可以以独立工具的方式组合各种前端开发语言（coffee、less、sass/scss、stylus、markdown、jade、ejs、handlebars等等你能想到的），并与其他后端开发语言结合。</p>
<p>assets pipeline的设计思想值得独立成工具用于前端工程，fis就当做这样的一个选择吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;来源：GitHub&lt;br&gt;作者：fouber&lt;br&gt;链接：&lt;a href=&quot;https://github.com/fouber/blog/issues/6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>开发者装逼手册</title>
    <link href="http://yoursite.com/2017/05/10/update12/"/>
    <id>http://yoursite.com/2017/05/10/update12/</id>
    <published>2017-05-10T06:35:10.000Z</published>
    <updated>2017-05-12T06:59:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>来源：GitHub<br>链接：<a href="https://github.com/kenberkeley/bigger-jser" target="_blank" rel="external">https://github.com/kenberkeley/bigger-jser</a><br>作者：天涯孤雁</p>
</blockquote>
<h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><p>Macbook Pro 是标配，美其名曰“提高开发体验”<br>什么？你还在用 Spotlight？赶紧给我换 Alfred！</p>
<p>编辑器，Sublime / Atom / VS Code 三选一<br>虽然很想用IDE，但一定要忍住，并且与人解释道：<br>“启动速度慢，消耗资源多，不适合我这种完美主义者<br>如果不是为了美观，我宁愿使用 Vim / Emacs”</p>
<p>命令行 iTerm2 + Oh-my-zsh<br>二逼青年用 bash，普通青年用 zsh<br>我们也只是想做一名普通人罢了</p>
<p>查资料虽然都是百度<br>但一定要称都是用 Google<br>且要说英文而不是中文的“谷歌”<br>使用美式发音，当自己是湾区老司机</p>
<p>尽管四级飘过，六级没过<br>在 Stack Overflow 上点数也低<br>但也要说每天都与各国程序员谈笑风生</p>
<h3 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h3><p>这年头如果还不用 Babel + ES6<br>都不好意思说自己是 JSer<br>当然还有 TypeScript / CoffeeScript / Dart …<br>没学过没关系<br>对外人说自己“略懂”即可<br>反正最后都是编译为 ES5，你懂的</p>
<p>为了避免对方深入问<br>此时你应该继续发表高见：<br>“JS 是基于原型的函数式弱类语言<br>引入类与强类真的是不伦不类”<br>说到此，顿一下，表现出百感交集<br>随后继续徐徐道：<br>“可大势所趋，吾等小辈惟随波逐流”<br>说罢，即可挥挥衣袖转身离去</p>
<blockquote>
<p>在这里不得不提一下，虽然使用 Babel 转码可以尽情装逼<br>但其对某些新特性的转换相当二逼(<a href="https://github.com/lcxfs1991/blog/issues/9" target="_blank" rel="external">详情请看这篇文章</a>)<br>一句话：Babel 虽好，但别贪杯哦（<a href="http://babeljs.io/repl" target="_blank" rel="external">Babel实时编译</a>）</p>
</blockquote>
<h3 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h3><p>摒弃JSLint/JSHint/JSCS拥抱ESLint<br>尽管平时只是个搬砖的<br>但时刻以世界顶级企业的规范约束自己<br>于是<code>eslint-config-airbnb</code>成了我们的标配</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Low */</span></div><div class="line"><span class="keyword">if</span> (a) &#123;</div><div class="line">  <span class="keyword">return</span> b;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  <span class="keyword">return</span> c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>逼格稍微高一点的这样写：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Bigger */</span></div><div class="line"><span class="keyword">if</span> (a) <span class="keyword">return</span> b; <span class="comment">// 提前结束，免用大括号与else</span></div><div class="line"><span class="keyword">return</span> c;</div></pre></td></tr></table></figure>
<p>实际上还能更进一步：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Bigger than bigger */</span></div><div class="line">① <span class="keyword">return</span> a ? b : c <span class="comment">// 不要写分号，留白予人想象的空间</span></div><div class="line">② <span class="keyword">return</span> a &amp;&amp; b || c</div></pre></td></tr></table></figure>
<p>总而言之，代码越短，可读性越差，逼格越高<br>不能让人随便看懂，就像人不能轻易让人看透</p>
<h3 id="奇淫技巧"><a href="#奇淫技巧" class="headerlink" title="奇淫技巧"></a>奇淫技巧</h3><blockquote>
<p>罄竹难书</p>
</blockquote>
<h3 id="常用库"><a href="#常用库" class="headerlink" title="常用库"></a>常用库</h3><h4 id="DOM库"><a href="#DOM库" class="headerlink" title="DOM库"></a>DOM库</h4><p>标配是 jQuery，手机端有 Zepto 作为替代品<br>想要装逼且不怕坑，那就上 Mootools<br>Prototype？嗯，复古的逼格都是很高的</p>
<p>一定要说自己纯粹为了优雅简洁，不得不用 jQuery<br>（如何做到 jQuery-free，请看<a href="http://www.ruanyifeng.com/blog/2013/05/jquery-free.html" target="_blank" rel="external">请看这篇</a>）</p>
<p>当然,就算是写jQuery<br>也能体现出逼格<br>我们来看看新手一般是怎么写的：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Low */</span></div><div class="line"><span class="keyword">var</span> value = $(<span class="string">".container .myInput1"</span>).val();</div><div class="line">$(<span class="string">".container .myInput2"</span>).val(value);</div><div class="line">$(<span class="string">".container .myInput3"</span>).attr(<span class="string">"disabled"</span>, <span class="string">"disabled"</span>);</div></pre></td></tr></table></figure>
<p>用双引号，以及对选择器性能认知不足，是新手的特征<br>一般直接使用类选择器的，都是对用户体验很有自信的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* Bigger */</div><div class="line">// 把div.container命名为myDiv</div><div class="line">var $myDiv = $(&apos;#myDiv&apos;), // 缓存DOM</div><div class="line">  v = $myDiv.find(&apos;.myInput1&apos;).val();</div><div class="line"> </div><div class="line">$myDiv</div><div class="line">  .find(&apos;.myInput2&apos;).val(v)</div><div class="line">  .end() // 坚持链式调用</div><div class="line">  .find(&apos;.myInput3&apos;).attr(&apos;disabled&apos;, &apos;disabled&apos;);</div></pre></td></tr></table></figure>
<p>（有关JQuery选择器的性能及最佳实践请看<a href="http://www.ruanyifeng.com/blog/2011/08/jquery_best_practices.html" target="_blank" rel="external">这篇</a>）</p>
<h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><p>BootStrap烂大街<br>不是我们的菜<br>我们选择的标准是门槛要高<br>于是<br>Foundation6/Ant Design<br>映入眼帘</p>
<p>请谨慎使用<br>Semantic UI/UIkit/AmazeUI…<br>避免不能自拔</p>
<h3 id="工具库"><a href="#工具库" class="headerlink" title="工具库"></a>工具库</h3><p>后浪lodash把前浪underscore拍死在沙滩上<br>于是它成了唯一的选择<br>不过为了保持逼格<br>我们要尽量使用原汁原味的 ES6<br>就算要用也一定要注意素质：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Low */</span></div><div class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">'lodash'</span> <span class="comment">// 把整个lodash打包进去了</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Bigger */</span></div><div class="line"><span class="keyword">import</span> isEmpty <span class="keyword">from</span> <span class="string">'lodash/isEmpty'</span> <span class="comment">// 仅把个别函数打包</span></div></pre></td></tr></table></figure>
<h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><p>逼格最高显然是Jade<br>但改名为Pug哈巴狗后<br>就像是小龙女被尹志平不可描述后<br>再也无爱了<br>从此以后<br>留了胡子Mustache）<br>扶着把手(Handlebars）<br>默默耕耘</p>
<h3 id="异步编程"><a href="#异步编程" class="headerlink" title="异步编程"></a>异步编程</h3><p>这里不谈Q/Bluebird/Async/co/then等库<br>皆因Babel已经支持所有的异步编程解决方案<br>当前最常用的还是Promise</p>
<p>有些新手会写出这种代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/* Low */</div><div class="line">// 找出与用户1同市的所有用户</div><div class="line">User.findById(1).then((user) =&gt; &#123;</div><div class="line">  User.find(&#123; city: user.city &#125;).then((users) =&gt; &#123;</div><div class="line">    res.json(users.toJSON())</div><div class="line">  &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>这属于 Promise<a href="http://bluebirdjs.com/docs/anti-patterns.html" target="_blank" rel="external">反模式</a>，与回调函数无异</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">User.findById(1).then((user) =&gt; &#123;</div><div class="line">  return User.find(&#123; city: user.city &#125;) // 返回Promise</div><div class="line">&#125;).then((users) =&gt; &#123;</div><div class="line">  res.json(users.toJSON())</div><div class="line">&#125;).catch(next)</div></pre></td></tr></table></figure>
<h3 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h3><p>如果你被<br>Bower/spm/Component/Duo…<br>坑过<br>请回到npm的怀抱<br>什么jspm有完没完…</p>
<h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3><p>想当年我不懂什么是自动构建工具<br>他们说：生命苦短,我们用Grunt</p>
<p>好不容易用上Grunt的时候<br>他们又说：Gulp基于流,符合Unix哲学</p>
<p>之后我虔诚地换上了Gulp<br>他们双说：Webpack最好用</p>
<p>最后终于用上了Webpack<br>他们叒说：FIS3约不约？。。。</p>
<h3 id="模块化方案"><a href="#模块化方案" class="headerlink" title="模块化方案"></a>模块化方案</h3><p>无论是</p>
<ul>
<li>RequireJS (AMD)</li>
<li>SeaJS (CMD)</li>
<li>KMD.js (KMD)</li>
<li>Browserify (CommonJS)</li>
<li>…<br>最后都庆幸回归到 npm + Webpack<br>什么？SystemJS？有完没完…</li>
</ul>
<h3 id="MV-框架-技术栈-大型框架"><a href="#MV-框架-技术栈-大型框架" class="headerlink" title="MV*框架 / 技术栈 / 大型框架"></a>MV*框架 / 技术栈 / 大型框架</h3><h4 id="Backbone"><a href="#Backbone" class="headerlink" title="Backbone"></a>Backbone</h4><p>每个人都有一段不堪回首的经历<br>就像当年在QQ空间发“你若安好便是晴天”的说说<br>Backbone就是这样子的存在</p>
<h4 id="Angular"><a href="#Angular" class="headerlink" title="Angular"></a>Angular</h4><p>一定要边吐槽边用，不然就一点都不ng 了<br>“学习曲线陡峭”不应从你口中说出<br>“学习过程趣味盎然”才是你的菜</p>
<h4 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h4><p>一定要用“优雅”来形容<br>就像用ES6一定要“大胆”</p>
<h4 id="React技术栈"><a href="#React技术栈" class="headerlink" title="React技术栈"></a>React技术栈</h4><p>React已经是前端高逼格的代名词<br>所以无论懂不懂都要喊：<br>“React大法好”<br>因为这是一种信仰<br>称赞JSX的标新立异<br>谈谈Flux/Redux<br>扯扯Elm/RxJS<br>每到深入则戛然而止：<br>“太深入的太抽象，你们未必能理解”<br>由此，听者只会更加崇拜你</p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>还有国内相对小众的Ember/Knockout/Avalon<br>（请别再把YUI/Dojo/Ext/KISSY扯进来了好伐）</p>
<h3 id="混合-原生开发"><a href="#混合-原生开发" class="headerlink" title="混合/原生开发"></a>混合/原生开发</h3><p>自从PhoneGap出来后<br>貌似我们也能抢安卓/iOS的饭碗了<br>Ionic更是将Hybrid APP推向高潮</p>
<p>不过混合始终比不上原生<br>于是React Native应运而生<br>最近多了一个新的选择：Weex</p>
<p>别忘了还有桌面的nw.js以及Electron</p>
<blockquote>
<p>JSer从一入门开始，就掌握了改变世界的能力<br>也比其他程序员更容易走向人生的巅峰</p>
</blockquote>
<h3 id="后端框架"><a href="#后端框架" class="headerlink" title="后端框架"></a>后端框架</h3><p>我们一直标榜自己是全栈<br>不玩几下后端框架怎么行</p>
<p>快递员用Express<br>风湿患者用Koa<br>哲学家用ThinkJS<br>水手用Sails</p>
<p>还有全栈的Meteor<br>上述都用一遍<br>相信也快转行了</p>
<h3 id="服务器进程管理"><a href="#服务器进程管理" class="headerlink" title="服务器进程管理"></a>服务器进程管理</h3><p>既然都玩上了后端框架<br>不懂部署服务器怎么行</p>
<p>二逼青年用 supervisor/nodemon<br>文艺青年用 forever<br>普通青年用 pm2<br>装逼青年用 Tmux+node</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;来源：GitHub&lt;br&gt;链接：&lt;a href=&quot;https://github.com/kenberkeley/bigger-jser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kenbe
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu服务器搭建SVN记录</title>
    <link href="http://yoursite.com/2017/05/09/update11/"/>
    <id>http://yoursite.com/2017/05/09/update11/</id>
    <published>2017-05-09T07:07:35.000Z</published>
    <updated>2017-05-12T06:53:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>svn，是一个开放源代码的版本控制系统，与git差不多的功能。</p>
<h3 id="构建服务器"><a href="#构建服务器" class="headerlink" title="构建服务器"></a>构建服务器</h3><p>说实话，这东西还是需要自己去折腾。<br>虽然网上的教程很多，但还是推荐看文档里的，很多人写到的不是少了这里就是那里，这种碎片化的知识，真的解决起来特别麻烦。</p>
<p><strong>推荐官方文档：</strong></p>
<blockquote>
<p>subversion: <a href="http://wiki.ubuntu.org.cn/SubVersion" target="_blank" rel="external">http://wiki.ubuntu.org.cn/SubVersion</a><br>trac: <a href="http://wiki.ubuntu.org.cn/Trac%E7%9A%84%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">http://wiki.ubuntu.org.cn/Trac%E7%9A%84%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE</a></p>
</blockquote>
<p><strong>主要注意点：</strong></p>
<ol>
<li><p>创建文件仓库的时候注意权限，由以上文档中提到的，在创建仓库时候，先需要添加组。在Linux下查看默认的用户组：groupmod+tab键则可以显示所有的组；也可以vim /etc/group查看组。</p>
</li>
<li><p>如果你想创建一个新的用户来专门管理你的SVN仓库：假如你创建用户svn，请注意将你的svn添加到subversion组。<code>sudo adduser svn subversion</code>。</p>
</li>
<li><p>另外一个就是权限问题，于仓库目录（假设仓库为repos)创建时如果在root用户下，<code>chown -R svn:subversion /home/svn/repos</code>。我把自己的目录改到了svn 用户下，然后再将权限改为可以读写的g+rws。具体参照wiki。</p>
</li>
</ol>
<h3 id="Apache2-Subversion"><a href="#Apache2-Subversion" class="headerlink" title="Apache2 Subversion"></a>Apache2 Subversion</h3><p>利用Apache服务器来访问远程仓库，需要开启Apache SVNmod：</p>
<ul>
<li><code>sudo apt-get install libapache2-svn</code>，其余需要请查阅wiki。</li>
<li><code>sudo a2enmod dav_svn</code></li>
</ul>
<p>开启模块之后，则对以下文件做修改。贴一份配置：</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Location /svn&gt;</span>  <span class="comment">#/svn表示http://hostname/svn/myproject</span></div><div class="line">  <span class="attribute">DAV</span> svn</div><div class="line">  <span class="attribute">SVNParentPath</span> /home/svn #配置仓库父目录</div><div class="line">  <span class="attribute">AuthType</span> Basic</div><div class="line">  <span class="attribute">AuthName</span> <span class="string">"SC Project Svn"</span></div><div class="line">  <span class="attribute">AuthUserFile</span> <span class="string">"/etc/subversion/passwd"</span>  #svn用户文件</div><div class="line">  <span class="attribute">AuthzSVNAccessFile</span> <span class="string">"/etc/subversion/authz"</span> #授权访问文件</div><div class="line">  <span class="attribute">Require</span> valid-user</div><div class="line"><span class="section">&lt;/Location&gt;</span></div></pre></td></tr></table></figure>
<p>如需要配置虚拟主机：</p>
<ul>
<li><code>cp 000-default.conf svn.test.com.conf</code></li>
<li><code>vi svn.test.com.conf</code></li>
</ul>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></div><div class="line">        <span class="attribute"><span class="nomarkup">ServerName</span></span> svn.test.com</div><div class="line">        <span class="section">&lt;Location /svn&gt;</span>  </div><div class="line">            <span class="attribute">DAV</span> svn</div><div class="line">            <span class="attribute">SVNParentPath</span> /home/svn </div><div class="line">            <span class="attribute">AuthType</span> Basic</div><div class="line">            <span class="attribute">AuthName</span> <span class="string">"SC Project Svn"</span></div><div class="line">            <span class="attribute">AuthUserFile</span> <span class="string">"/etc/subversion/passwd"</span>  </div><div class="line">            <span class="attribute">AuthzSVNAccessFile</span> <span class="string">"/etc/subversion/authz"</span> </div><div class="line">            <span class="attribute">Require</span> valid-user</div><div class="line">        <span class="section">&lt;/Location&gt;</span></div><div class="line"></div><div class="line"><span class="attribute">ErrorLog</span> <span class="string">"/var/log/apache2/error-svntest.log"</span></div><div class="line"><span class="attribute">CustomLog</span> <span class="string">"/var/log/apache2/access-svntest.log"</span> combined</div><div class="line"><span class="section">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>a2ensite svn.test.com.conf</code></li>
<li><code>apachectl restart</code></li>
</ul>
<h3 id="添加用户和权限"><a href="#添加用户和权限" class="headerlink" title="添加用户和权限"></a>添加用户和权限</h3><p>用http访问方式请注意用命令行生成：</p>
<p><code>htpasswd -cm /etc/subversion/passwd  adduser</code>然后跟密码。<br><strong>注意：</strong>以上命令第一次时带-cm参数，第二个生成时不用带-c，否则会覆盖。<br><code>htpasswd -m /etc/subversion/passwd test</code></p>
<p>创建完后<code>vi /etc/subversion/authz</code>权限文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[groups]</div><div class="line">admin = test /*自己创建*/</div><div class="line"></div><div class="line">[/]</div><div class="line">* = r</div><div class="line"></div><div class="line">[repos:/]</div><div class="line">@admin = rw</div><div class="line"></div><div class="line">* = r</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;svn，是一个开放源代码的版本控制系统，与git差不多的功能。&lt;/p&gt;
&lt;h3 id=&quot;构建服务器&quot;&gt;&lt;a href=&quot;#构建服务器&quot; class=&quot;headerlink&quot;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux基本命令大全</title>
    <link href="http://yoursite.com/2017/05/09/update10/"/>
    <id>http://yoursite.com/2017/05/09/update10/</id>
    <published>2017-05-09T06:44:07.000Z</published>
    <updated>2017-05-11T07:37:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>来源：大牛笔记<br>链接：<a href="http://www.daniubiji.cn/archives/25" target="_blank" rel="external">http://www.daniubiji.cn/archives/25</a></p>
</blockquote>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">ls     显示文件或目录</div><div class="line">   -l  列出文件详细信息l(list)</div><div class="line">   -a  列出当前目录下所有文件及目录，包括隐藏的a(all)</div><div class="line">mkdir  创建目录</div><div class="line">   -p  创建目录，若无父目录，则创建p(parent)   </div><div class="line">cd     切换目录</div><div class="line">touch  创建空文件</div><div class="line">echo   创建带有内容的文件。</div><div class="line">cat    查看文件内容</div><div class="line">cp     拷贝</div><div class="line">mv     移动或重命名</div><div class="line">rm     删除文件</div><div class="line">   -r  递归删除，可删除子目录及文件</div><div class="line">   -f  强制删除</div><div class="line">find   在文件系统中搜索某文件</div><div class="line">wc     统计文本中行数、字数、字符数</div><div class="line">grep   在文本文件中查找某个字符串</div><div class="line">rmdir  删除空目录</div><div class="line">tree   树形结构显示目录，需要安装tree包</div><div class="line">pwd    显示当前目录</div><div class="line">ln     创建链接文件</div><div class="line">more、less   分页显示文本文件内容</div><div class="line">head、tail   显示文件头、尾内容</div><div class="line">ctrl+alt+F1  命令行全屏模式</div></pre></td></tr></table></figure>
<h3 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">stat     显示指定文件的详细信息，比ls更详细</div><div class="line">who      显示在线登陆用户</div><div class="line">whoami   显示当前操作用户</div><div class="line">hostname 显示主机名</div><div class="line">uname    显示系统信息</div><div class="line">top      动态显示当前耗费资源最多进程信息</div><div class="line">ps       显示瞬间进程状态 ps -aux</div><div class="line">du       查看目录大小 du -h /home带有单位显示目录信息</div><div class="line">df       查看磁盘大小 df -h 带有单位显示磁盘信息</div><div class="line">ifconfig 查看网络情况</div><div class="line">ping     测试网络连通</div><div class="line">netstat  显示网络状态信息</div><div class="line">man      命令不会用了，找男人? 如：man ls</div><div class="line">clear    清屏</div><div class="line">alias    对命令重命名 如：alias showmeit=”ps -aux” ，另外解除使用unaliax showmeit</div><div class="line">kill     杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。</div></pre></td></tr></table></figure>
<h3 id="打包压缩相关命令"><a href="#打包压缩相关命令" class="headerlink" title="打包压缩相关命令"></a>打包压缩相关命令</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">gzip：</div><div class="line">bzip2：</div><div class="line">tar:     打包压缩</div><div class="line">   -c    归档文件</div><div class="line">   -x    压缩文件</div><div class="line">   -z    gzip压缩文件</div><div class="line">   -j    bzip2压缩文件</div><div class="line">   -v    显示压缩或解压缩过程 v(view)</div><div class="line">   -f    使用档名</div><div class="line">例：</div><div class="line">tar -cvf /home/abc.tar /home/abc        只打包，不压缩</div><div class="line">tar -zcvf /home/abc.tar.gz /home/abc    打包，并用gzip压缩</div><div class="line">tar -jcvf /home/abc.tar.bz2 /home/abc   打包，并用bzip2压缩</div><div class="line">当然，如果想解压缩，就直接替换上面的命令tar  -cvf  /   tar  -zcvf  /  tar  -jcvf 中的“c” 换成“x” 就可以了。</div></pre></td></tr></table></figure>
<h3 id="关机-重启机器"><a href="#关机-重启机器" class="headerlink" title="关机/重启机器"></a>关机/重启机器</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">shutdown</div><div class="line">    -r      关机重启</div><div class="line">    -h      关机不重启</div><div class="line">    now     立刻关机</div><div class="line">halt        关机</div><div class="line">reboot      重启</div></pre></td></tr></table></figure>
<h3 id="Linux管道"><a href="#Linux管道" class="headerlink" title="Linux管道"></a>Linux管道</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</div><div class="line">例：grep -r “close” /home/* | more 在home目录下所有文件中查找，包括close的文件，并分页输出。</div></pre></td></tr></table></figure>
<h3 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。</div><div class="line">比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。</div><div class="line">sudo dpkg -i tree_1.5.3-1_i386.deb  安装软件</div><div class="line">sudo dpkg -r tree             卸载软件</div><div class="line">注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；</div><div class="line">APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。</div><div class="line">依然以tree为例</div><div class="line">sudo apt-get install tree     安装tree</div><div class="line">sudo apt-get remove tree      卸载tree</div><div class="line">sudo apt-get update           更新软件</div><div class="line">sudo apt-get upgrade </div><div class="line"></div><div class="line">将.rpm文件转为.deb文件</div><div class="line">.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。</div><div class="line">sudo alien abc.rpm</div></pre></td></tr></table></figure>
<h3 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</div><div class="line">命令模式下：</div><div class="line">:q            退出</div><div class="line">:q!           强制退出</div><div class="line">:wq           保存并退出</div><div class="line">:set number   显示行号</div><div class="line">:set nonumber 隐藏行号</div><div class="line">/apache       在文档中查找apache 按n跳到下一个，shift+n上一个</div><div class="line">yyp           复制光标所在行，并粘贴</div><div class="line">h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</div></pre></td></tr></table></figure>
<h3 id="用户及用户组管理"><a href="#用户及用户组管理" class="headerlink" title="用户及用户组管理"></a>用户及用户组管理</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/etc/passwd    存储用户账号</div><div class="line">/etc/group     存储组账号</div><div class="line">/etc/shadow    存储用户账号的密码</div><div class="line">/etc/gshadow   存储用户组账号的密码</div><div class="line">useradd        添加用户名</div><div class="line">userdel        删除用户名</div><div class="line">adduser        添加用户名</div><div class="line">groupadd       添加组名</div><div class="line">groupdel       删除组名</div><div class="line">passwd root    给root设置密码</div><div class="line">su root</div><div class="line">su – root</div><div class="line">/etc/profile   系统环境变量</div><div class="line">bash_profile   用户环境变量</div><div class="line">.bashrc        用户环境变量</div><div class="line">su user        切换用户，加载配置文件.bashrc</div><div class="line">su – user      切换用户，加载配置文件/etc/profile ，加载bash_profile</div></pre></td></tr></table></figure>
<h3 id="更改文件的用户及用户组"><a href="#更改文件的用户及用户组" class="headerlink" title="更改文件的用户及用户组"></a>更改文件的用户及用户组</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo chown [-R] owner[:group] &#123;File|Directory&#125;</div><div class="line">例如：还以jdk-7u21-linux-i586.tar.gz为例。属于用户hadoop，组hadoop</div><div class="line">要想切换此文件所属的用户及组。可以使用命令。</div><div class="line">sudo chown root:root jdk-7u21-linux-i586.tar.gz</div></pre></td></tr></table></figure>
<h3 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h3><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">三种基本权限</div><div class="line">R   读  数值表示为4</div><div class="line">W   写  数值表示为2</div><div class="line">X   可执行 数值表示为1</div><div class="line"></div><div class="line"></div><div class="line">-rw-rw-r–一共十个字符，分成四段。</div><div class="line">第一个字符“-”表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录</div><div class="line">第二三四个字符“rw-”表示当前所属用户的权限。     所以用数值表示为4+2=6</div><div class="line">第五六七个字符“rw-”表示当前所属组的权限。        所以用数值表示为4+2=6</div><div class="line">第八九十个字符“r–”表示其他用户权限。                 所以用数值表示为2</div><div class="line">所以操作此文件的权限用数值表示为662?</div><div class="line"></div><div class="line">更改权限</div><div class="line">sudo chmod [u所属用户  g所属组  o其他用户   a所有用户]    [+增加权限   -减少权限]   [r   w   x]   目录名 </div><div class="line">例如：有一个文件filename，权限为“-rw-r—-x” ,将权限值改为”-rwxrw-r-x”，用数值表示为765</div><div class="line">sudo chmod u+x g+w o+r filename</div><div class="line"></div><div class="line">sudo chmod 765 filename</div><div class="line"></div><div class="line">工作中用到的一些有意思的命令：</div><div class="line">linux nc</div><div class="line">tree</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;来源：大牛笔记&lt;br&gt;链接：&lt;a href=&quot;http://www.daniubiji.cn/archives/25&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.daniubiji.cn/archives/
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>移动开发遇到问题总结</title>
    <link href="http://yoursite.com/2017/05/08/update09/"/>
    <id>http://yoursite.com/2017/05/08/update09/</id>
    <published>2017-05-08T01:19:40.000Z</published>
    <updated>2017-05-11T07:25:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作者：熊汉彪<br>链接：<a href="https://zhuanlan.zhihu.com/p/26141351" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26141351</a><br>来源：知乎</p>
</blockquote>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>众所周知的移动端，一般来说可以分为上中下三个部分，分别为 header、main、footer，其中header、footer 是固定高度，分别固定在页面顶部和页面底部，而 main 是占据页面其余位置，并且可以滚动。基本是以下形式：<br><img src="http://upload-images.jianshu.io/upload_images/2741993-6761d169556abcc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/360" alt="layout"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>根据页面滚动的位置分为两种布局，一种是滚动 body，另一种是固定 body 的高度为100%，在 main 中滚动。第一种布局有个优点，就是页面的地址栏会随着 body 的滚动隐藏起来，并且 Android 设备中，滚动 body 会更加的流畅，如果项目中有类似需求可以考虑。实现布局的方式如下:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">overflow</span>: auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.header</span>,</div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">  <span class="attribute">position</span>: fixed;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.header</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">44px</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>第一种情况比较适合长列表页面，整个页面除了 header 和 footer 之外都需要滚动，但很多时候，我们只希望页面的某个元素滚动，这个时候，就采取第二种布局方式。<br>这种页面布局有三种相对简单的实现方式：</p>
<ol>
<li>fixed 定位</li>
<li>absolute 定位</li>
<li>flex 定位</li>
</ol>
<p>最容易想到的实现方式是 fixed 定位，实现方式如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.header</span>,</div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">  <span class="attribute">position</span>: fixed;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.header</span> &#123;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.main</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">44px</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">box-sizing</span>: border-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>fixed 定位实现起来简单，在大多数浏览器中也能正常显示，但是 fixed 定位在移动端会有兼容性问题，后面会提到，所以不建议这种实现方式。absolute 定位和 fixed 定位类似，只要把 header 的 footer 的 position 改为 absolute 就可以了。细心的小伙伴可能发现了，这里的 main 没有设置 overflow ，因为这里有一个坑，不管是absolute 定位还是 fixed 定位都一样，为了方便描述，以下只说 fixed 定位(在 absolute 定位也一样成立)。在PC端没有问题，但是在移动端，如果 main 设置了 overflow 为 true，header 会被 main 遮住，对，没有错，虽然是 fixed 定位，但是在移动端，如果 fixed 定位节点后面紧接跟着的兄弟节点是可滚动的(也就是设置了 overflow 为 true )，那么 fixed 节点会被其后的兄弟节点遮住。这个问题解决方式有很多，既然是 fixed 定位后面紧接着可滚动的兄弟节点才会有这个坑，只要让他的条件有一个不成立就好了，有以下解决方案：</p>
<ol>
<li>让 fixed 定位节点后面不紧接着可滚动的节点</li>
<li>不让 scroll 节点遮住 fixed 节点</li>
</ol>
<p><strong>第一种方方案有以下可选方法:</strong></p>
<ol>
<li>把所有 fixed 节点放在 scroll 元素后面，即把 header 节点放在 main 节点后面</li>
</ol>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>但这样显然不太符合一般人的思维习惯，代码可读性降低。</p>
<ol>
<li>使 main 不可滚动，给 main 嵌套一层可滚动的子节点</li>
</ol>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scroll-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.main</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.scroll-container</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">overflow</span>: auto;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>第二种方案有以下可选方法:</strong></p>
<ol>
<li>让 scroll 节点不与 fixed 节点有重合</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">44px</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.main</span> &#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>给 fixed 节点设置 z-index</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.header</span>,</div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">8888</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到这里可能会有小伙伴觉得，一个简单的布局，还要绕过这么多坑，难道没有简单的方式吗，答案当然是肯定的，那就是第三种实现方式，flex 布局。flex 定位在移动端兼容到了 iOS 7.1+，Android 4.4+,如果使用 autoprefixer 等工具还可以降级为旧版本的 flexbox ，可以兼容到 iOS 3.2 和 Android 2.1。而且用 flex 实现起来相对简单，在各个浏览器里表现也相对一致。实现如下:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">flex-direction</span>: column;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.main</span> &#123;</div><div class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</div><div class="line">  <span class="attribute">overflow</span>: auto;</div><div class="line">  <span class="attribute">-webkit-overflow-scrolling</span>: touch;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.header</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.footer</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="fixed-与-input"><a href="#fixed-与-input" class="headerlink" title="fixed 与 input"></a>fixed 与 input</h3><p>刚接触移动端 Web 开发的小伙伴应该都会听前辈们说过，不要在有 input 标签的页面使用 fixed 定位，因为这两者在一起的时候，总是会有奇奇怪怪的问题。在 iOS 上，当点击 input 标签获取焦点唤起软键盘的时候，fixed 定位会暂时失效，或者可以理解为变成了 absolute 定位，在含有滚动的页面，fixed 定位的节点和其他节点一起滚动。其实这个问题也很好解决，只要保证 fixed 定位的节点的父节点不可滚动，那么即使 fixed 定位失效，也不会和其他滚动节点一起滚动，影响界面。但是除此之外，还有很多坑比较难以解决，例如 Android 软键盘唤起后遮挡住 input 标签，用户没法看到自己输入的字符串，iOS 则需要在输入至少一个字符之后，才能将对应的 input 标签滚动到合适的位置，所以为了避开这些难以解决的坑，在有表单输入的页面，尽量用absolute 或者 flex 替换 fixed。</p>
<h3 id="样式实现"><a href="#样式实现" class="headerlink" title="样式实现"></a>样式实现</h3><ol>
<li>iOS 1px实现(Owner）</li>
</ol>
<p>参考伪元素做法如下：</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* scss style */</span></div><div class="line"><span class="selector-class">.tran</span>&#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    &amp;::before&#123;</div><div class="line">        <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">box-sizing</span>: border-box;</div><div class="line">        <span class="attribute">height</span>: <span class="number">1px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#cfcfcf</span>;</div><div class="line">        -webkit-<span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</div><div class="line">        <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</div><div class="line">        -webkit-<span class="attribute">transform</span>: scale(<span class="number">0.5</span>);</div><div class="line">        <span class="attribute">transform</span>: scale(<span class="number">0.5</span>); </div><div class="line">    &#125;</div><div class="line">    </div><div class="line"><span class="comment">/* mixin */</span></div><div class="line">@<span class="keyword">mixin</span> bottomLine(<span class="variable">$c</span>:rgba(<span class="number">207</span>, 207, 207, .95), <span class="variable">$t</span>:<span class="number">0</span>, <span class="variable">$r</span>:<span class="number">0</span>, <span class="variable">$b</span>:<span class="number">0</span>, <span class="variable">$l</span>:<span class="number">0</span>) &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="variable">$l</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="variable">$t</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="variable">$r</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</div><div class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$c</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="variable">$c</span>;</div><div class="line">    -webkit-<span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">    -webkit-<span class="attribute">transform</span>: scaleY(<span class="number">0.501</span>);</div><div class="line">    <span class="attribute">transform</span>: scaleY(<span class="number">0.501</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>背景渐变</li>
</ol>
<p>CSS3 有了渐变背景，可以通过渐变背景实现 1px 的 border，实现原理是设置 1px 的渐变背景，50% 有颜色，50% 是透明的。</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">mixin</span> commonStyle() &#123;</div><div class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">1px</span>,<span class="number">1px</span> <span class="number">100%</span> ,<span class="number">100%</span> <span class="number">1px</span>, <span class="number">1px</span> <span class="number">100%</span>;</div><div class="line">  <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">  <span class="attribute">background-position</span>: top, right top,  bottom, left top;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">@<span class="keyword">mixin</span> border(<span class="variable">$border-color</span>) &#123;</div><div class="line">  @<span class="keyword">include</span> commonStyle();</div><div class="line">  <span class="attribute">background-image</span>:linear-gradient(<span class="number">180deg</span>, <span class="variable">$border-color</span>, <span class="variable">$border-color</span> <span class="number">50%</span>, transparent <span class="number">50%</span>),</div><div class="line">  linear-gradient(<span class="number">270deg</span>, <span class="variable">$border-color</span>, <span class="variable">$border-color</span> <span class="number">50%</span>, transparent <span class="number">50%</span>),</div><div class="line">  linear-gradient(<span class="number">0deg</span>, <span class="variable">$border-color</span>, <span class="variable">$border-color</span> <span class="number">50%</span>, transparent <span class="number">50%</span>),</div><div class="line">  linear-gradient(<span class="number">90deg</span>, <span class="variable">$border-color</span>, <span class="variable">$border-color</span> <span class="number">50%</span>, transparent <span class="number">50%</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>伪类+transform：</strong></p>
<p>这类方法的实现原理是用伪元素的 box-shadow 或 border 实现 border，然后用 transform缩小到原来的一半。即使有圆角的需求也能很好的实现。</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">mixin</span> hairline-common(<span class="variable">$border-radius</span>) &#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</div><div class="line">  &amp;:before &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</div><div class="line">    <span class="attribute">box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">mixin</span> hairline(<span class="variable">$direct</span>: <span class="string">'all'</span>, <span class="variable">$border-color</span>: <span class="number">#ccc</span>, <span class="variable">$border-radius</span>: 0) &#123;</div><div class="line">  @<span class="keyword">include</span> hairline-common(<span class="variable">$border-radius</span>);</div><div class="line">  &amp;:before &#123;</div><div class="line">    <span class="attribute">transform</span>: scale(.<span class="number">5</span>);</div><div class="line">    @<span class="keyword">if</span> <span class="variable">$direct</span> == <span class="string">'all'</span> &#123;</div><div class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200%</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200%</span>;</div><div class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="variable">$border-color</span>;</div><div class="line">      <span class="attribute">z-index</span>: -<span class="number">1</span>;</div><div class="line">    &#125; @<span class="keyword">else</span> if <span class="variable">$direct</span> == <span class="string">'left'</span> or <span class="variable">$direct</span> == <span class="string">'right'</span> &#123;</div><div class="line">      #&#123;<span class="variable">$direct</span>&#125;: <span class="number">0</span>;</div><div class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200%</span>;</div><div class="line">      <span class="attribute">border</span>-#&#123;<span class="variable">$direct</span>&#125;: <span class="number">1px</span> solid <span class="variable">$border-color</span>;</div><div class="line">    &#125; @<span class="keyword">else</span> &#123;</div><div class="line">      #&#123;<span class="variable">$direct</span>&#125;: <span class="number">0</span>;</div><div class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200%</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">      <span class="attribute">border</span>-#&#123;<span class="variable">$direct</span>&#125;: <span class="number">1px</span> solid <span class="variable">$border-color</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者：熊汉彪&lt;br&gt;链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/26141351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/261
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>走了，远了</title>
    <link href="http://yoursite.com/2017/05/07/update08/"/>
    <id>http://yoursite.com/2017/05/07/update08/</id>
    <published>2017-05-07T10:50:05.000Z</published>
    <updated>2017-05-07T10:52:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>我们都开始说自己老了。<br>我们都不再晚上一二点睡觉，也开始早上七八点就起床。<br>我们都开始学着自己洗衣做饭，也开始逐渐走出房子去外面走走。<br>喝酒的时候不再一口气喝完，父母唠叨的时候也不会大发脾气。<br>不再和人说打架就打架，有时候吃亏也忍了。<br>很多人都说自己可能是成熟了，但更多的人都觉得自己老了。</p>
<p>越来越多的朋友跟同学结婚生子，每日为了生活而奔波劳累。也许曾经也跟人山盟海誓，也许也说好了此生非君不嫁。但岁月流去匆匆，最终彼此都有了彼此的归属。我也没见过几人同我抱怨着婚姻没有爱情的理由，只是时候到了，也觉得自己再不结婚就晚了。每个人对生活的体会都不一样，有人奉旨成婚，有人被逼无奈，其中道理大家都心照不宣。很多时候我们都忘了自己的初衷到底在哪里，我们当初所追求的生活目标也是日渐模糊。可我们只能这样过着，我们都看到白发渐渐爬上了父母的头，还有嗷嗷待哺的孩子的哭啼。所以我们只能去做自己不愿做的事，来完成我们以前嗤之以鼻的养家糊口。</p>
<p>这样的生活也许和前辈先人要好太多，至少我们都不再下田劳作，不要顶着太阳收玉米。我们坐的是空调下的舒服的皮椅，吃的是五花八门的各色美食。所以父辈们总是说：你们这辈人总是生在福中不知福。可谁又曾想过我们？拿着低微的工资，每月还要大清早挤公交车去，晚上挤公交回来。看了各式各样的房子，但总觉得一年下来，能买个厕所已经是今年超额收入了。食堂打饭不去早了，留下的总是残羹剩饭，然后加上每个月的生活费，电费、水费、电话费一大堆各式各样的清单。再年复一年的盼着自己涨点工资，好在空闲的时候能出去和朋友喝顿小酒，生活所有的激情最后都变成了无奈和苦笑。</p>
<p>然而我们只是一群二十多岁的年轻人。从生下来就一直承载了父辈希望的一代人，从小就不停的奔走在学校与补习班。我们这二十几年来学到最多的东西就是：怎么在学校好好念书，将来就会有出息的道理。 然而当我们一毕业，对这个社会无所适从的时候，很快又是骂声一片，那么多的书都是白读了。就算没人骂你是傻逼，你若是挣不了钱，你回家还是抬不起头来，到时候人家数落你一句，读那么多书有个屁用，你只能无言以对。这是我们这些人的悲哀。我不否认有些心智卓绝之辈，他们在走出校门就混得风生水起，要朋友有朋友，要房子有房子。但这个社会的大多数都只能在吃着五块钱的蛋炒饭 时候还在和父母说，现在和朋友在吃大餐。他们也同样在学校里充满了抱负，有理想，有知识。可就是混得比人惨。</p>
<p>只是生活就是生活，道理不会让这个蛮横的社会停下它脚步。何况人生不如意者十之八九，日子久了，自然也就习惯了。活了二十多年，受的恩惠还是要还，受的委屈暂时也只能忍。饭还是要吃，水还是要喝，日子还要过。</p>
<p>只可惜，青春走了，远了。<br>我们都老了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们都开始说自己老了。&lt;br&gt;我们都不再晚上一二点睡觉，也开始早上七八点就起床。&lt;br&gt;我们都开始学着自己洗衣做饭，也开始逐渐走出房子去外面走走。&lt;br&gt;喝酒的时候不再一口
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>乱七</title>
    <link href="http://yoursite.com/2017/05/07/update07/"/>
    <id>http://yoursite.com/2017/05/07/update07/</id>
    <published>2017-05-07T10:45:13.000Z</published>
    <updated>2017-05-07T10:49:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>时间越流越快，更何况这天阴阴的，谁知道外面是几时光景。</p>
<p>日子依旧这么乱着，吃饭没有准点，可能十点，也可以半夜十二点。然后静坐着，不知道自己在想些什么东西，看他们忙，而我一个人却毫无反应。偶尔突然想起，又到了睡觉的时候，只好老实的爬上了床，等睁开眼的刹那，不知今天几时几刻。毫无寄托的意思，也不在乎别人是否想起。还好，还不要想那些为什么。只知道自己过一天，离放假又近一天。岁月确实磨去人的棱角，想来，每天都能睡到自然醒，那自然是幸福的。只是心中还是存在一些小小的焦虑，只等有天突然出现，把自己吓一跳。谁叫人都是在失去的时候才知道以往珍贵，书到用时方恨少呢。</p>
<p> 因为生在在水库旁边，自然没少去湖里面游泳划船，想那些湖光山色，是一生中美好的景色。曾经也因为在水里泡了太久，差点溺水。只是因为骄阳太过毒辣，而水里总归是那么舒服，自然就忘记了脱水抽筋这回事。只是幸运的年华里，还有小伙伴在身边拉了我一把。然而我现在的生活里，又有谁再来拉我一把。这些年虽然对天上掉馅饼的事，念想得少了，只是还是有些侥幸依然还留在一些角落里。深知怨天尤人只是跟自己过不去，遇困难时却也忍不住几声埋怨世道不公。埋怨虽然于事无补，但至少让心里能够痛快几分。谁叫我们都贪图这世间的几分愉悦多过理智。</p>
<p>只是人生来，选择便不是很多。还有很多选择也并非自愿，所以留下诸多遗憾也是在所难免。现在看来，好像是遗憾多过幸事，那些年因为愚蠢犯下的错误，现在依旧在固执的坚持，因为如果把以前的一切否认，需要重新正视来自这个世界给我们的感觉，它关系着我们同这个世界的联系，还有处理问题的方式等很多方面。所以我们宁愿知道错了，依旧不会悔改。也许也是因为被逼无奈而无法回头。这就好像个人去登山，中间有段路没有走正确，或遇荆棘，或走下坡。事实是你与正确的路相隔太远，无法轻易回头。所以我只能自己说服自己，在前途再多的荆棘也只能从荆棘堆里冲过去，或者再偏移到另外一条道上。再回头的勇气，我是没有。岁月只能赐予你前进的鼓励，却无法奖赏你回头的车票。</p>
<p>你若此生靠近一条河，也许便可以在其中看看自己的倒影，或是光鲜，或是凄惨。却只是自己才知道的模样，与他人无关！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时间越流越快，更何况这天阴阴的，谁知道外面是几时光景。&lt;/p&gt;
&lt;p&gt;日子依旧这么乱着，吃饭没有准点，可能十点，也可以半夜十二点。然后静坐着，不知道自己在想些什么东西，看他
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>吾心安处是吾乡</title>
    <link href="http://yoursite.com/2017/05/07/update06/"/>
    <id>http://yoursite.com/2017/05/07/update06/</id>
    <published>2017-05-07T09:13:09.000Z</published>
    <updated>2017-05-07T10:42:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<h3 id="人往"><a href="#人往" class="headerlink" title="人往"></a>人往</h3><p>阴雨天！</p>
<p>以前比较喜欢的天气，没人打扰，只有静静的雨声淅沥沥。不是说现在不喜欢，只是没那种看雨的心情了。人走总会茶凉，世事如此，无可避免。所以在这世界里，我尽量想把事情都处理好，但尽力了，却依然有些不甘心的失败。可能也因为如此，在内心里也越发容不得那些人走的闲言碎语。心的里海已经越发开始干涸，只等待哪天再也不见，或者生出另外一片海了。</p>
<p>一个人总要寻些安慰自己的理由，有些时候确实不小心就走进了自欺欺人的圈子里，难以自拔。所以便想来这世间诸事皆苦，何必执着太多呢。</p>
<h3 id="人来"><a href="#人来" class="headerlink" title="人来"></a>人来</h3><p>有人走便有人来，只是人来也不见得都是自己喜爱的人的模样，又要一段时间和感情的培养。所以做了很多的事，只觉得在这件事上，依然难以把持。人来的时候希望一切都是美好的，只是人越大，毕竟心防也是越牢固，所以越年长，和自己那些对脾气的人也越少。人力终有穷，于人的精力也许一生便也仅限那原来的几人罢了。</p>
<p>不过从另一个方面来说，也许是自己勇气愈发少了。便是再对生活做一次选择的气魄都逐渐消失，只怪俗语老是说：衣不如新人不如故。</p>
<h3 id="入城"><a href="#入城" class="headerlink" title="入城"></a>入城</h3><p>《围城》里说的是：城里的人想出去，城外的人想进来。</p>
<p>只是似乎到了今日，也不见得，为了心中虚无缥缈的梦想越来越多的人背井离乡，我想这便是生而为人最大的勇气。入得城来，想来也是诸多事宜难以适应，生活压力也总归是大的，于以前熟悉的准则，大多数都被自己推翻重置。谁能料想：当初的凌云壮志于今日的兢兢业业如履薄冰呢？只是一切都是自己做的决断，硬着头皮走，虽不添几分骨气，但总归有些硬气；逃回故里，也不见得胆小如鼠。</p>
<h3 id="出城"><a href="#出城" class="headerlink" title="出城"></a>出城</h3><p>诸事烦忧，皆由心不静。</p>
<p>人在世间，总逃不开吃喝拉撒，以及人情世故这些乱七八糟的事情。如果你自觉自己在这些事情上难以处理，那想来你从来都没有适应过孤独感。傅雷在家书里写的，你需要自己去体会那种孤独感，于世间不处几分孤独，是有些难以成长。但很多时候，我也想过很多关于自我同世界的和谐。于内心世界做一个坚强的强者还是与世同流随波逐流，想来你也会遇到：特立独行的人，总会受世人诸多膈应。</p>
<p>想来：一生求个心安之处，便知足矣！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;人往&quot;&gt;&lt;a href=&quot;#人往&quot; class=&quot;headerlink&quot; title=&quot;人往&quot;&gt;&lt;/a&gt;人往&lt;/h3&gt;&lt;p&gt;阴雨天！&lt;/p&gt;
&lt;p&gt;以前比较喜欢的
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>琐碎</title>
    <link href="http://yoursite.com/2017/05/03/update05/"/>
    <id>http://yoursite.com/2017/05/03/update05/</id>
    <published>2017-05-03T07:06:35.000Z</published>
    <updated>2017-05-07T09:12:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<h3 id="何处是归途"><a href="#何处是归途" class="headerlink" title="何处是归途"></a>何处是归途</h3><p>出门在外有段时间了，也许自小地方走出来的人，从来都会带着一股小家子气的不适应。</p>
<p>在外面的生活其实也很简单，每天就是为了生活奔波劳累，平常娱乐活动也是很少。自然这也许和职业有很大的关系，但触景伤情这种事情实在无法避免。说实话我很想念原来和朋友喝酒聊天的日子，我一直希望通过自己的努力，然后再回到我原来生活的地方和朋友能够有个隔三差五的小聚。但时间过去，也越发觉得这不过是这个时代里的奢望。</p>
<p>这世界太快了，在小地方你可能感受不到，或者说你感觉不是很明显。而当你处在大环境的时候，你便觉得就算你不走，周围也会把你拖着走。这不是开玩笑，大城市就是生活节奏特别快的地方，这也是我一直以来都不太适应的地方，所以今天才会发出此问。</p>
<h3 id="每日修炼"><a href="#每日修炼" class="headerlink" title="每日修炼"></a>每日修炼</h3><p>原来上学的时候一直就没养成很好的习惯，所以在外面也确实把自己给坑惨了。很多事情似乎一下安排不过来的感觉，让自己觉得非常累。所以在这里除了不断删删改改自己的时间表外，自然也摸索到生活的一丝小诀窍。时刻把自己整理得有条不紊，总会让人得到意想不到的好处。所以这时候你要克服心中的懒，去坚持把小事做好，每一件拖沓的事情背后，总会倾轧你其余的生活时间。如果你不在意这些的话，就像切菜的砧板，你平常很少清洗，那么留下来的污渍总会有一天再也洗不去，事实上每次切完菜后清洗的时间不过一分钟。所以何必为了那一分钟的小懒，而在日后丢掉一整块砧板呢？</p>
<p>所以每日的修炼就是把习惯整理好，不过拖沓的人也许有他自己的道理。比如像前辈先人里出的艺术家同科学家似乎于生活细节上确实做得不是很好，这可能是你的目标，自然与我无关。也有可能这么多年来，在武侠的世界里，邋遢爱喝酒的大叔总是那种世外高人，所以你的目标便是为了此生能够扮猪吃老虎，那其实想来也是挺不错的，恩，祝好。</p>
<h3 id="事出总有因"><a href="#事出总有因" class="headerlink" title="事出总有因"></a>事出总有因</h3><p>原来我逛得比较多的是简书和知乎，但现在我基本不去简书了。知乎至少还有一大堆哪怕有营养或者无营养的问答，但简书已经沦为一大片成功学贩卖才学的地方了。从功名成就来说，读书人以前最大达念头便是加官进爵，光耀门楣。这似乎是千古不变的道理，哪怕到了近时代。我从小听我爷爷讲得最多的一句话便是“万般皆下品惟有读书高”，可他这般那般劝我，我也开始像这般靠拢吧。</p>
<p>但学习总归是有些别的用处，不一定非要在功名利禄间做选择。如是我想，万般皆一样，读书使我快乐。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;何处是归途&quot;&gt;&lt;a href=&quot;#何处是归途&quot; class=&quot;headerlink&quot; title=&quot;何处是归途&quot;&gt;&lt;/a&gt;何处是归途&lt;/h3&gt;&lt;p&gt;出门在外有段时
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>于众生百态</title>
    <link href="http://yoursite.com/2017/05/03/update04/"/>
    <id>http://yoursite.com/2017/05/03/update04/</id>
    <published>2017-05-03T03:33:33.000Z</published>
    <updated>2017-05-03T07:06:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>昨晚又是没耐住性子，硬是熬到两三点钟才睡。</p>
<p>以前都是很不喜欢熬夜的，只是最近都有些抑制不住自己，总是不小心看钟表的时候，便是到了极晚的时候了，也许时光一直都是这样偷偷溜走的吧。已经这样熬过了一段时间了，但是上班的时候，总是要逼着自己早起的，所以清晨的时光里，总会有股对世界朦胧的观察力。好像与世间要若即若离，但又下一秒又生出举世皆静的感觉。说白了，其实就是睡眼朦胧看世界的时候，有些别样的情绪罢了。</p>
<h4 id="你看众人"><a href="#你看众人" class="headerlink" title="你看众人"></a>你看众人</h4><p>我喜欢路上走着，看不同的人，看不同的景，想不同的事。</p>
<p>其实我也不知道自己在看什么，每次走回去的时候，不会多记得路上几个人的脸，不会想今天那颗树下怎么没放那个熟悉的自行车，有时候甚至还会想，刚在路上想到啥？只是我知道在路上的时候我可以想很多问题，一直都想到自己捉摸不到的边际里，可以思考生活的意义这些重要，也可以考虑一下刚才踩到一堆狗屎的粗俗。只是日子平淡之下，并没有太多意外。</p>
<p>只是每个人都有一种姿态在这个世间，路过人群的时候有时候也会感受到世界离你而去的孤寂感，因为你站在人群里，但就是找不到自己的归属感。你路过拐角，看到一群民工坐在树荫下，叉着大脚丫子，拿着手机说着听不懂的话语；或者再往前走上一段距离，就有许多大清早坐在运输车里打瞌睡的人，似乎在等待下一个货单的到来；或是衬衣，锃亮的皮鞋的上班族，他们匆忙赶路的样子，总能让你在某处觉出好玩的味道。</p>
<h4 id="看自己"><a href="#看自己" class="headerlink" title="看自己"></a>看自己</h4><p>每日里走的路都是相同的部分，甚至开始熟悉几分钟自己可以走到哪个定点，如果以现在的速度又需要多久的时间，路上看哪个妹子的眼神要炙热一些，又或者眼神闪避是不是给了对方一些不好的感觉。我尽量让自己表情适当，眼神坚毅，因为至少这样不至于给人第一印象很坏。可是我为何总是这般小心翼翼呢？或许我从来都是想错了，我有什么理由不小心翼翼呢？这两个问题之间，便是截然不同的两种态度。虽然只是从无聊的行走了衍生出来一堆莫名其妙的问题，并不是多么深奥难解的话题罢了。但我既然自我思考，想来还是有几分戚戚然的味道在里面。个中滋味，奇妙无穷也是说不准的。</p>
<p>然，看众生相，却难看清自己之相。我们总能感觉到众生相里看到自己的影子，所以很多时候总觉得看到别人的时候，一眼看到了自己未来的模样。所以很多时候，我们在潜意识里看到的，我们的人生就该是这个模样的，也就添了很多莫名的恐惧。</p>
<h4 id="去以后"><a href="#去以后" class="headerlink" title="去以后"></a>去以后</h4><p>无论多少忧愁烦恼，终究是抵不过这吃饭喝水的大事。</p>
<p>所以在路上依旧看那些路人，依旧看自己同世界隔离，依然戚戚然想写乱七八糟的事。却也不得不说：该来都会来，不来的也不会不请自来。愿时间能走慢些，你我能在人海里多看彼此一眼，惺惺相惜！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨晚又是没耐住性子，硬是熬到两三点钟才睡。&lt;/p&gt;
&lt;p&gt;以前都是很不喜欢熬夜的，只是最近都有些抑制不住自己，总是不小心看钟表的时候，便是到了极晚的时候了，也许时光一直都是
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>关于ftp的一点</title>
    <link href="http://yoursite.com/2017/05/02/update03/"/>
    <id>http://yoursite.com/2017/05/02/update03/</id>
    <published>2017-05-02T02:21:52.000Z</published>
    <updated>2017-05-02T07:01:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>昨晚弄了一下服务器，发现今早起来发现部署的网页有些问题，便四处找了找问题。</p>
<h3 id="项目上传后Premission"><a href="#项目上传后Premission" class="headerlink" title="项目上传后Premission"></a>项目上传后Premission</h3><p>因hexo采用的ftpsync插件，经常有很多问题。要不然就是连不上服务器，要不然就是node莫名其妙报错，说实话我是实在想换了，但暂时还没有一个很好的替换方案。暂时先折腾下。</p>
<p>一般对Linux接触过的人都会对Premission比较敏感，我本地上传之前检查了自己的目录情况下，文件夹755，文件644。不知道文件权限的请自行百度。听过的一种说法是尽量保证页面的安全性，但不做评论吧。我遇到的问题是，我的文件夹上传到服务器上的时候权限变成了700。</p>
<p>PS：假设你创建了用户组hexo，然后你没有专门用于ftp上传的话，请记得检查hexo目录的所有者，否则ftp上传的时候很容易报错<code>fatal 550</code>。更改用户组：</p>
<p><code>sudo chown -R hexo:hexo /home/path</code></p>
<p><strong>服务器情况：</strong></p>
<ul>
<li>建立了专门的用户组来作为ftp上传。</li>
<li>文件可以上传，index页面可以显示，但是二级页面后的页面一直是访问不到。</li>
</ul>
<p><strong>解决方法：</strong></p>
<ol>
<li>先检查自己的vsftpd.conf文件，查看 local_umask=022是否放开注释。注意，修改配置后记得重启vsftpd。</li>
<li>如果以上配置没有生效，我在另外一个网站看到一个方案，只是我没测试过：在网站根目录下<code>umask=0022</code>，测试上传不成功的话<code>vi .bashrc</code>在文件中另起一行输入<code>umask 022</code>。保存后重启sshd </li>
</ol>
<h3 id="解决以往文件权限问题"><a href="#解决以往文件权限问题" class="headerlink" title="解决以往文件权限问题"></a>解决以往文件权限问题</h3><p>以下两个批量处理命令</p>
<ul>
<li>将文件夹权限处理为755；<code>find -type d|xargs chmod 755</code></li>
<li>将文件批量处理644；<code>find -type -f|xargs chmod 644</code></li>
</ul>
<p><strong>请在目标目录下处理</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨晚弄了一下服务器，发现今早起来发现部署的网页有些问题，便四处找了找问题。&lt;/p&gt;
&lt;h3 id=&quot;项目上传后Premission&quot;&gt;&lt;a href=&quot;#项目上传后Prem
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>新婚燕尔</title>
    <link href="http://yoursite.com/2017/05/02/update02/"/>
    <id>http://yoursite.com/2017/05/02/update02/</id>
    <published>2017-05-02T01:14:57.000Z</published>
    <updated>2017-05-02T01:16:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>想来时光都是易逝的，不然何至于你今日都嫁做人妇呢？</p>
<p>只不过说的是顽笑话，在你新婚的日子里，可惜出了些莫名的状况，不好去当面给你道喜了。但想来现在的你也是幸福快乐的，所以远方的我，送上默默的祝福，自然也能寥解心中慰藉。很多事情都是意外，但当你走进殿堂的那一刻，自然你是做好了婚姻的准备，其实这些年来我也一直在想象自己到了那一刻会是个什么感觉，但想过很多，总觉得还是差些味道。可能结婚这种事，确实需要亲身体会才会知道到底是何种滋味。年岁总会增长的，婚姻这种事情不出意外，应该是每个人都需要经历的。只是你自然而然的前行，终归让我觉得有些意外罢了。</p>
<p>不知昨夜的你心情是怎样，是否安稳的睡觉。想起我们认识至今似乎已经是九个年头了，从当初看你口直心快到今日的不忘初心，我的朋友，你依然还是我当初印象中的那个人。虽然在为人处世上你总归是有些慢半拍的样子，可内心依旧是温柔善良的模样，你打起人来，手从来不知道轻重；骂起人来，自然也是颐气指使。或许这让那些不太理解的人，总觉得你没有温婉的天分，就比如像成老倌。我至今都记得他当初骂你们的那些话，但现在想来只觉得是温柔的过去拂过，自然是一笑而过。</p>
<p>你今天总归是忙的，从大清早红妆缕缕，等待接亲队伍，直到仪式开始，分发喜糖。想来直到午夜都是很难停歇下来，不过毕竟还有一大堆亲朋与好友在旁，还有结婚的这股喜庆劲，应该会是很美的场景。然而过了今天，你却要和过去开始告别，开始两个人的日子。你也许学不会勤以持家，也许做不出美味的饭菜，但你总会开始用心去做这些事。也许结婚了，离梦想也越远了，但希望你还能像以前那般，过自己想要的生活。</p>
<p>似乎话至于此，我也不知道自己该如何。</p>
<p>就祝福你们共修百年之好吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想来时光都是易逝的，不然何至于你今日都嫁做人妇呢？&lt;/p&gt;
&lt;p&gt;只不过说的是顽笑话，在你新婚的日子里，可惜出了些莫名的状况，不好去当面给你道喜了。但想来现在的你也是幸福快
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
</feed>
