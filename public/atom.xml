<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanchuan&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-09T06:53:06.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sanchuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux基本命令大全</title>
    <link href="http://yoursite.com/2017/05/09/update10/"/>
    <id>http://yoursite.com/2017/05/09/update10/</id>
    <published>2017-05-09T06:44:07.000Z</published>
    <updated>2017-05-09T06:53:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>来源：大牛笔记<br>链接：<a href="http://www.daniubiji.cn/archives/25" target="_blank" rel="external">http://www.daniubiji.cn/archives/25</a></p>
</blockquote>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><hr>
<pre><code>ls     显示文件或目录
   -l  列出文件详细信息l(list)
   -a  列出当前目录下所有文件及目录，包括隐藏的a(all)
mkdir  创建目录
   -p  创建目录，若无父目录，则创建p(parent)   
cd     切换目录
touch  创建空文件
echo   创建带有内容的文件。
cat    查看文件内容
cp     拷贝
mv     移动或重命名
rm     删除文件
   -r  递归删除，可删除子目录及文件
   -f  强制删除
find   在文件系统中搜索某文件
wc     统计文本中行数、字数、字符数
grep   在文本文件中查找某个字符串
rmdir  删除空目录
tree   树形结构显示目录，需要安装tree包
pwd    显示当前目录
ln     创建链接文件
more、less   分页显示文本文件内容
head、tail   显示文件头、尾内容
ctrl+alt+F1  命令行全屏模式
</code></pre><h3 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h3><hr>
<pre><code>stat     显示指定文件的详细信息，比ls更详细
who      显示在线登陆用户
whoami   显示当前操作用户
hostname 显示主机名
uname    显示系统信息
top      动态显示当前耗费资源最多进程信息
ps       显示瞬间进程状态 ps -aux
du       查看目录大小 du -h /home带有单位显示目录信息
df       查看磁盘大小 df -h 带有单位显示磁盘信息
ifconfig 查看网络情况
ping     测试网络连通
netstat  显示网络状态信息
man      命令不会用了，找男人? 如：man ls
clear    清屏
alias    对命令重命名 如：alias showmeit=”ps -aux” ，另外解除使用unaliax showmeit
kill     杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。
</code></pre><h3 id="打包压缩相关命令"><a href="#打包压缩相关命令" class="headerlink" title="打包压缩相关命令"></a>打包压缩相关命令</h3><hr>
<pre><code>gzip：
bzip2：
tar:     打包压缩
   -c    归档文件
   -x    压缩文件
   -z    gzip压缩文件
   -j    bzip2压缩文件
   -v    显示压缩或解压缩过程 v(view)
   -f    使用档名
例：
tar -cvf /home/abc.tar /home/abc        只打包，不压缩
tar -zcvf /home/abc.tar.gz /home/abc    打包，并用gzip压缩
tar -jcvf /home/abc.tar.bz2 /home/abc   打包，并用bzip2压缩
当然，如果想解压缩，就直接替换上面的命令tar  -cvf  /   tar  -zcvf  /  tar  -jcvf 中的“c” 换成“x” 就可以了。
</code></pre><h3 id="关机-重启机器"><a href="#关机-重启机器" class="headerlink" title="关机/重启机器"></a>关机/重启机器</h3><hr>
<pre><code>shutdown
    -r      关机重启
    -h      关机不重启
    now     立刻关机
halt        关机
reboot      重启
</code></pre><h3 id="Linux管道"><a href="#Linux管道" class="headerlink" title="Linux管道"></a>Linux管道</h3><hr>
<pre><code>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。
例：grep -r “close” /home/* | more 在home目录下所有文件中查找，包括close的文件，并分页输出。
</code></pre><h3 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h3><hr>
<pre><code>dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。
比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。
sudo dpkg -i tree_1.5.3-1_i386.deb  安装软件
sudo dpkg -r tree             卸载软件
注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；
APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。
依然以tree为例
sudo apt-get install tree     安装tree
sudo apt-get remove tree      卸载tree
sudo apt-get update           更新软件
sudo apt-get upgrade 

将.rpm文件转为.deb文件
.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。
sudo alien abc.rpm
</code></pre><h3 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h3><hr>
<pre><code>vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。
命令模式下：
:q            退出
:q!           强制退出
:wq           保存并退出
:set number   显示行号
:set nonumber 隐藏行号
/apache       在文档中查找apache 按n跳到下一个，shift+n上一个
yyp           复制光标所在行，并粘贴
h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)
</code></pre><h3 id="用户及用户组管理"><a href="#用户及用户组管理" class="headerlink" title="用户及用户组管理"></a>用户及用户组管理</h3><hr>
<pre><code>/etc/passwd    存储用户账号
/etc/group     存储组账号
/etc/shadow    存储用户账号的密码
/etc/gshadow   存储用户组账号的密码
useradd        添加用户名
userdel        删除用户名
adduser        添加用户名
groupadd       添加组名
groupdel       删除组名
passwd root    给root设置密码
su root
su – root
/etc/profile   系统环境变量
bash_profile   用户环境变量
.bashrc        用户环境变量
su user        切换用户，加载配置文件.bashrc
su – user      切换用户，加载配置文件/etc/profile ，加载bash_profile
</code></pre><h3 id="更改文件的用户及用户组"><a href="#更改文件的用户及用户组" class="headerlink" title="更改文件的用户及用户组"></a>更改文件的用户及用户组</h3><hr>
<pre><code>sudo chown [-R] owner[:group] {File|Directory}
例如：还以jdk-7u21-linux-i586.tar.gz为例。属于用户hadoop，组hadoop
要想切换此文件所属的用户及组。可以使用命令。
sudo chown root:root jdk-7u21-linux-i586.tar.gz
</code></pre><h3 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h3><hr>
<pre><code>三种基本权限
R   读  数值表示为4
W   写  数值表示为2
X   可执行 数值表示为1


-rw-rw-r–一共十个字符，分成四段。
第一个字符“-”表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录
第二三四个字符“rw-”表示当前所属用户的权限。     所以用数值表示为4+2=6
第五六七个字符“rw-”表示当前所属组的权限。        所以用数值表示为4+2=6
第八九十个字符“r–”表示其他用户权限。                 所以用数值表示为2
所以操作此文件的权限用数值表示为662?

更改权限
sudo chmod [u所属用户  g所属组  o其他用户   a所有用户]    [+增加权限   -减少权限]   [r   w   x]   目录名 
例如：有一个文件filename，权限为“-rw-r—-x” ,将权限值改为”-rwxrw-r-x”，用数值表示为765
sudo chmod u+x g+w o+r filename

sudo chmod 765 filename

工作中用到的一些有意思的命令：
linux nc
tree
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;来源：大牛笔记&lt;br&gt;链接：&lt;a href=&quot;http://www.daniubiji.cn/archives/25&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.daniubiji.cn/archives/
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>移动开发遇到问题总结</title>
    <link href="http://yoursite.com/2017/05/08/update09/"/>
    <id>http://yoursite.com/2017/05/08/update09/</id>
    <published>2017-05-08T01:19:40.000Z</published>
    <updated>2017-05-09T06:38:34.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作者：熊汉彪<br>链接：<a href="https://zhuanlan.zhihu.com/p/26141351" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26141351</a><br>来源：知乎</p>
</blockquote>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>众所周知的移动端，一般来说可以分为上中下三个部分，分别为 header、main、footer，其中header、footer 是固定高度，分别固定在页面顶部和页面底部，而 main 是占据页面其余位置，并且可以滚动。基本是以下形式：<br><img src="http://upload-images.jianshu.io/upload_images/2741993-6761d169556abcc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/360" alt="layout"></p>
<pre><code>&lt;body&gt;

  &lt;div class=&quot;header&quot;&gt;&lt;/div&gt;

  &lt;div class=&quot;main&quot;&gt;&lt;/div&gt;

  &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;

&lt;/body&gt;
</code></pre><p>根据页面滚动的位置分为两种布局，一种是滚动 body，另一种是固定 body 的高度为100%，在 main 中滚动。第一种布局有个优点，就是页面的地址栏会随着 body 的滚动隐藏起来，并且 Android 设备中，滚动 body 会更加的流畅，如果项目中有类似需求可以考虑。实现布局的方式如下:</p>
<pre><code>body {
  overflow: auto;
}

.header,
.footer {
  position: fixed;
  left: 0;
  right: 0;
  height: 44px;
}

.header {
  top: 0;
}

.footer {
  bottom: 0;
}

.main {
  height: 100%;
  padding: 44px 0;
}
</code></pre><p>第一种情况比较适合长列表页面，整个页面除了 header 和 footer 之外都需要滚动，但很多时候，我们只希望页面的某个元素滚动，这个时候，就采取第二种布局方式。<br>这种页面布局有三种相对简单的实现方式：</p>
<ol>
<li>fixed 定位</li>
<li>absolute 定位</li>
<li>flex 定位</li>
</ol>
<p>最容易想到的实现方式是 fixed 定位，实现方式如下：</p>
<pre><code>html, body {
  height: 100%;
  overflow: hidden;
}
.header,
.footer {
  position: fixed;
  left: 0;
  right: 0;
  height: 44px;
}


.header {
  top: 0;
}


.footer {
  bottom: 0;
}


.main {
  height: 100%;
  padding: 44px 0;
  box-sizing: border-box;
}
</code></pre><p>fixed 定位实现起来简单，在大多数浏览器中也能正常显示，但是 fixed 定位在移动端会有兼容性问题，后面会提到，所以不建议这种实现方式。absolute 定位和 fixed 定位类似，只要把 header 的 footer 的 position 改为 absolute 就可以了。细心的小伙伴可能发现了，这里的 main 没有设置 overflow ，因为这里有一个坑，不管是absolute 定位还是 fixed 定位都一样，为了方便描述，以下只说 fixed 定位(在 absolute 定位也一样成立)。在PC端没有问题，但是在移动端，如果 main 设置了 overflow 为 true，header 会被 main 遮住，对，没有错，虽然是 fixed 定位，但是在移动端，如果 fixed 定位节点后面紧接跟着的兄弟节点是可滚动的(也就是设置了 overflow 为 true )，那么 fixed 节点会被其后的兄弟节点遮住。这个问题解决方式有很多，既然是 fixed 定位后面紧接着可滚动的兄弟节点才会有这个坑，只要让他的条件有一个不成立就好了，有以下解决方案：</p>
<ol>
<li>让 fixed 定位节点后面不紧接着可滚动的节点</li>
<li>不让 scroll 节点遮住 fixed 节点</li>
</ol>
<p><strong>第一种方方案有以下可选方法:</strong></p>
<ol>
<li>把所有 fixed 节点放在 scroll 元素后面，即把 header 节点放在 main 节点后面</li>
</ol>
<pre><code>&lt;body&gt;
  &lt;div class=&quot;main&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;header&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre><p>但这样显然不太符合一般人的思维习惯，代码可读性降低。</p>
<ol>
<li>使 main 不可滚动，给 main 嵌套一层可滚动的子节点</li>
</ol>
<pre><code>&lt;body&gt;
  &lt;div class=&quot;header&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;main&quot;&gt;
    &lt;div class=&quot;scroll-container&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;
&lt;/body&gt;


&lt;style&gt;
  .main {
    overflow: hidden;
  }
  .scroll-container {
    height: 100%;
    overflow: auto;
  }
&lt;/style&gt;
</code></pre><p><strong>第二种方案有以下可选方法:</strong></p>
<ol>
<li>让 scroll 节点不与 fixed 节点有重合</li>
</ol>
<pre><code>body {
  padding: 44px 0;
}


.main {
  padding: 0;
}
</code></pre><ol>
<li>给 fixed 节点设置 z-index</li>
</ol>
<pre><code>.header,
.footer {
    z-index: 8888;
}
</code></pre><p>看到这里可能会有小伙伴觉得，一个简单的布局，还要绕过这么多坑，难道没有简单的方式吗，答案当然是肯定的，那就是第三种实现方式，flex 布局。flex 定位在移动端兼容到了 iOS 7.1+，Android 4.4+,如果使用 autoprefixer 等工具还可以降级为旧版本的 flexbox ，可以兼容到 iOS 3.2 和 Android 2.1。而且用 flex 实现起来相对简单，在各个浏览器里表现也相对一致。实现如下:</p>
<pre><code>body {
  display: flex;
  flex-direction: column;
}
.main {
  flex: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.header {
  height: 44px;
}
.footer {
  height: 44px;
}
</code></pre><h3 id="fixed-与-input"><a href="#fixed-与-input" class="headerlink" title="fixed 与 input"></a>fixed 与 input</h3><p>刚接触移动端 Web 开发的小伙伴应该都会听前辈们说过，不要在有 input 标签的页面使用 fixed 定位，因为这两者在一起的时候，总是会有奇奇怪怪的问题。在 iOS 上，当点击 input 标签获取焦点唤起软键盘的时候，fixed 定位会暂时失效，或者可以理解为变成了 absolute 定位，在含有滚动的页面，fixed 定位的节点和其他节点一起滚动。其实这个问题也很好解决，只要保证 fixed 定位的节点的父节点不可滚动，那么即使 fixed 定位失效，也不会和其他滚动节点一起滚动，影响界面。但是除此之外，还有很多坑比较难以解决，例如 Android 软键盘唤起后遮挡住 input 标签，用户没法看到自己输入的字符串，iOS 则需要在输入至少一个字符之后，才能将对应的 input 标签滚动到合适的位置，所以为了避开这些难以解决的坑，在有表单输入的页面，尽量用absolute 或者 flex 替换 fixed。</p>
<h3 id="样式实现"><a href="#样式实现" class="headerlink" title="样式实现"></a>样式实现</h3><ol>
<li>iOS 1px实现(Owner）</li>
</ol>
<p>参考伪元素做法如下：</p>
<pre><code>/*scss style*/
.tran{
    position: relative;
    &amp;::before{
        content: &#39;&#39;;
        position: absolute;
        box-sizing: border-box;
        height: 1px;
        left: 0;
        top: 0;
        border-bottom: 1px solid #cfcfcf;
        -webkit-transform-origin: 0 0;
        transform-origin: 0 0;
        -webkit-transform: scale(0.5);
        transform: scale(0.5); 
    }

/* mixin */
@mixin bottomLine($c:rgba(207, 207, 207, .95), $t:0, $r:0, $b:0, $l:0) {
    content: &quot; &quot;;
    position: absolute;
    left: $l;
    bottom: $t;
    right: $r;
    height: 1px;
    border-bottom: 1px solid $c;
    color: $c;
    -webkit-transform-origin: 0 100%;
    transform-origin: 0 100%;
    -webkit-transform: scaleY(0.501);
    transform: scaleY(0.501);
}
</code></pre><ol>
<li>背景渐变</li>
</ol>
<p>CSS3 有了渐变背景，可以通过渐变背景实现 1px 的 border，实现原理是设置 1px 的渐变背景，50% 有颜色，50% 是透明的。</p>
<pre><code>@mixin commonStyle() {
  background-size: 100% 1px,1px 100% ,100% 1px, 1px 100%;
  background-repeat: no-repeat;
  background-position: top, right top,  bottom, left top;
}


@mixin border($border-color) {
  @include commonStyle();
  background-image:linear-gradient(180deg, $border-color, $border-color 50%, transparent 50%),
  linear-gradient(270deg, $border-color, $border-color 50%, transparent 50%),
  linear-gradient(0deg, $border-color, $border-color 50%, transparent 50%),
  linear-gradient(90deg, $border-color, $border-color 50%, transparent 50%);
}
</code></pre><p><strong>伪类+transform：</strong></p>
<p>这类方法的实现原理是用伪元素的 box-shadow 或 border 实现 border，然后用 transform缩小到原来的一半。即使有圆角的需求也能很好的实现。</p>
<pre><code>
@mixin hairline-common($border-radius) {
  position: relative;
  z-index: 0;
  &amp;:before {
    position: absolute;
    content: &#39;&#39;;
    border-radius: $border-radius;
    box-sizing: border-box;
    transform-origin: 0 0;
  }
}
@mixin hairline($direct: &#39;all&#39;, $border-color: #ccc, $border-radius: 0) {
  @include hairline-common($border-radius);
  &amp;:before {
    transform: scale(.5);
    @if $direct == &#39;all&#39; {
      top: 0;
      left: 0;
      width: 200%;
      height: 200%;
      box-shadow: 0 0 0 1px $border-color;
      z-index: -1;
    } @else if $direct == &#39;left&#39; or $direct == &#39;right&#39; {
      #{$direct}: 0;
      top: 0;
      width: 0;
      height: 200%;
      border-#{$direct}: 1px solid $border-color;
    } @else {
      #{$direct}: 0;
      left: 0;
      width: 200%;
      height: 0;
      border-#{$direct}: 1px solid $border-color;
    }
  }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者：熊汉彪&lt;br&gt;链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/26141351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/261
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>走了，远了</title>
    <link href="http://yoursite.com/2017/05/07/update08/"/>
    <id>http://yoursite.com/2017/05/07/update08/</id>
    <published>2017-05-07T10:50:05.000Z</published>
    <updated>2017-05-07T10:52:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>我们都开始说自己老了。<br>我们都不再晚上一二点睡觉，也开始早上七八点就起床。<br>我们都开始学着自己洗衣做饭，也开始逐渐走出房子去外面走走。<br>喝酒的时候不再一口气喝完，父母唠叨的时候也不会大发脾气。<br>不再和人说打架就打架，有时候吃亏也忍了。<br>很多人都说自己可能是成熟了，但更多的人都觉得自己老了。</p>
<p>越来越多的朋友跟同学结婚生子，每日为了生活而奔波劳累。也许曾经也跟人山盟海誓，也许也说好了此生非君不嫁。但岁月流去匆匆，最终彼此都有了彼此的归属。我也没见过几人同我抱怨着婚姻没有爱情的理由，只是时候到了，也觉得自己再不结婚就晚了。每个人对生活的体会都不一样，有人奉旨成婚，有人被逼无奈，其中道理大家都心照不宣。很多时候我们都忘了自己的初衷到底在哪里，我们当初所追求的生活目标也是日渐模糊。可我们只能这样过着，我们都看到白发渐渐爬上了父母的头，还有嗷嗷待哺的孩子的哭啼。所以我们只能去做自己不愿做的事，来完成我们以前嗤之以鼻的养家糊口。</p>
<p>这样的生活也许和前辈先人要好太多，至少我们都不再下田劳作，不要顶着太阳收玉米。我们坐的是空调下的舒服的皮椅，吃的是五花八门的各色美食。所以父辈们总是说：你们这辈人总是生在福中不知福。可谁又曾想过我们？拿着低微的工资，每月还要大清早挤公交车去，晚上挤公交回来。看了各式各样的房子，但总觉得一年下来，能买个厕所已经是今年超额收入了。食堂打饭不去早了，留下的总是残羹剩饭，然后加上每个月的生活费，电费、水费、电话费一大堆各式各样的清单。再年复一年的盼着自己涨点工资，好在空闲的时候能出去和朋友喝顿小酒，生活所有的激情最后都变成了无奈和苦笑。</p>
<p>然而我们只是一群二十多岁的年轻人。从生下来就一直承载了父辈希望的一代人，从小就不停的奔走在学校与补习班。我们这二十几年来学到最多的东西就是：怎么在学校好好念书，将来就会有出息的道理。 然而当我们一毕业，对这个社会无所适从的时候，很快又是骂声一片，那么多的书都是白读了。就算没人骂你是傻逼，你若是挣不了钱，你回家还是抬不起头来，到时候人家数落你一句，读那么多书有个屁用，你只能无言以对。这是我们这些人的悲哀。我不否认有些心智卓绝之辈，他们在走出校门就混得风生水起，要朋友有朋友，要房子有房子。但这个社会的大多数都只能在吃着五块钱的蛋炒饭 时候还在和父母说，现在和朋友在吃大餐。他们也同样在学校里充满了抱负，有理想，有知识。可就是混得比人惨。</p>
<p>只是生活就是生活，道理不会让这个蛮横的社会停下它脚步。何况人生不如意者十之八九，日子久了，自然也就习惯了。活了二十多年，受的恩惠还是要还，受的委屈暂时也只能忍。饭还是要吃，水还是要喝，日子还要过。</p>
<p>只可惜，青春走了，远了。<br>我们都老了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们都开始说自己老了。&lt;br&gt;我们都不再晚上一二点睡觉，也开始早上七八点就起床。&lt;br&gt;我们都开始学着自己洗衣做饭，也开始逐渐走出房子去外面走走。&lt;br&gt;喝酒的时候不再一口
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>乱七</title>
    <link href="http://yoursite.com/2017/05/07/update07/"/>
    <id>http://yoursite.com/2017/05/07/update07/</id>
    <published>2017-05-07T10:45:13.000Z</published>
    <updated>2017-05-07T10:49:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>时间越流越快，更何况这天阴阴的，谁知道外面是几时光景。</p>
<p>日子依旧这么乱着，吃饭没有准点，可能十点，也可以半夜十二点。然后静坐着，不知道自己在想些什么东西，看他们忙，而我一个人却毫无反应。偶尔突然想起，又到了睡觉的时候，只好老实的爬上了床，等睁开眼的刹那，不知今天几时几刻。毫无寄托的意思，也不在乎别人是否想起。还好，还不要想那些为什么。只知道自己过一天，离放假又近一天。岁月确实磨去人的棱角，想来，每天都能睡到自然醒，那自然是幸福的。只是心中还是存在一些小小的焦虑，只等有天突然出现，把自己吓一跳。谁叫人都是在失去的时候才知道以往珍贵，书到用时方恨少呢。</p>
<p> 因为生在在水库旁边，自然没少去湖里面游泳划船，想那些湖光山色，是一生中美好的景色。曾经也因为在水里泡了太久，差点溺水。只是因为骄阳太过毒辣，而水里总归是那么舒服，自然就忘记了脱水抽筋这回事。只是幸运的年华里，还有小伙伴在身边拉了我一把。然而我现在的生活里，又有谁再来拉我一把。这些年虽然对天上掉馅饼的事，念想得少了，只是还是有些侥幸依然还留在一些角落里。深知怨天尤人只是跟自己过不去，遇困难时却也忍不住几声埋怨世道不公。埋怨虽然于事无补，但至少让心里能够痛快几分。谁叫我们都贪图这世间的几分愉悦多过理智。</p>
<p>只是人生来，选择便不是很多。还有很多选择也并非自愿，所以留下诸多遗憾也是在所难免。现在看来，好像是遗憾多过幸事，那些年因为愚蠢犯下的错误，现在依旧在固执的坚持，因为如果把以前的一切否认，需要重新正视来自这个世界给我们的感觉，它关系着我们同这个世界的联系，还有处理问题的方式等很多方面。所以我们宁愿知道错了，依旧不会悔改。也许也是因为被逼无奈而无法回头。这就好像个人去登山，中间有段路没有走正确，或遇荆棘，或走下坡。事实是你与正确的路相隔太远，无法轻易回头。所以我只能自己说服自己，在前途再多的荆棘也只能从荆棘堆里冲过去，或者再偏移到另外一条道上。再回头的勇气，我是没有。岁月只能赐予你前进的鼓励，却无法奖赏你回头的车票。</p>
<p>你若此生靠近一条河，也许便可以在其中看看自己的倒影，或是光鲜，或是凄惨。却只是自己才知道的模样，与他人无关！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时间越流越快，更何况这天阴阴的，谁知道外面是几时光景。&lt;/p&gt;
&lt;p&gt;日子依旧这么乱着，吃饭没有准点，可能十点，也可以半夜十二点。然后静坐着，不知道自己在想些什么东西，看他
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>吾心安处是吾乡</title>
    <link href="http://yoursite.com/2017/05/07/update06/"/>
    <id>http://yoursite.com/2017/05/07/update06/</id>
    <published>2017-05-07T09:13:09.000Z</published>
    <updated>2017-05-07T10:42:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<h3 id="人往"><a href="#人往" class="headerlink" title="人往"></a>人往</h3><p>阴雨天！</p>
<p>以前比较喜欢的天气，没人打扰，只有静静的雨声淅沥沥。不是说现在不喜欢，只是没那种看雨的心情了。人走总会茶凉，世事如此，无可避免。所以在这世界里，我尽量想把事情都处理好，但尽力了，却依然有些不甘心的失败。可能也因为如此，在内心里也越发容不得那些人走的闲言碎语。心的里海已经越发开始干涸，只等待哪天再也不见，或者生出另外一片海了。</p>
<p>一个人总要寻些安慰自己的理由，有些时候确实不小心就走进了自欺欺人的圈子里，难以自拔。所以便想来这世间诸事皆苦，何必执着太多呢。</p>
<h3 id="人来"><a href="#人来" class="headerlink" title="人来"></a>人来</h3><p>有人走便有人来，只是人来也不见得都是自己喜爱的人的模样，又要一段时间和感情的培养。所以做了很多的事，只觉得在这件事上，依然难以把持。人来的时候希望一切都是美好的，只是人越大，毕竟心防也是越牢固，所以越年长，和自己那些对脾气的人也越少。人力终有穷，于人的精力也许一生便也仅限那原来的几人罢了。</p>
<p>不过从另一个方面来说，也许是自己勇气愈发少了。便是再对生活做一次选择的气魄都逐渐消失，只怪俗语老是说：衣不如新人不如故。</p>
<h3 id="入城"><a href="#入城" class="headerlink" title="入城"></a>入城</h3><p>《围城》里说的是：城里的人想出去，城外的人想进来。</p>
<p>只是似乎到了今日，也不见得，为了心中虚无缥缈的梦想越来越多的人背井离乡，我想这便是生而为人最大的勇气。入得城来，想来也是诸多事宜难以适应，生活压力也总归是大的，于以前熟悉的准则，大多数都被自己推翻重置。谁能料想：当初的凌云壮志于今日的兢兢业业如履薄冰呢？只是一切都是自己做的决断，硬着头皮走，虽不添几分骨气，但总归有些硬气；逃回故里，也不见得胆小如鼠。</p>
<h3 id="出城"><a href="#出城" class="headerlink" title="出城"></a>出城</h3><p>诸事烦忧，皆由心不静。</p>
<p>人在世间，总逃不开吃喝拉撒，以及人情世故这些乱七八糟的事情。如果你自觉自己在这些事情上难以处理，那想来你从来都没有适应过孤独感。傅雷在家书里写的，你需要自己去体会那种孤独感，于世间不处几分孤独，是有些难以成长。但很多时候，我也想过很多关于自我同世界的和谐。于内心世界做一个坚强的强者还是与世同流随波逐流，想来你也会遇到：特立独行的人，总会受世人诸多膈应。</p>
<p>想来：一生求个心安之处，便知足矣！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;人往&quot;&gt;&lt;a href=&quot;#人往&quot; class=&quot;headerlink&quot; title=&quot;人往&quot;&gt;&lt;/a&gt;人往&lt;/h3&gt;&lt;p&gt;阴雨天！&lt;/p&gt;
&lt;p&gt;以前比较喜欢的
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>琐碎</title>
    <link href="http://yoursite.com/2017/05/03/update05/"/>
    <id>http://yoursite.com/2017/05/03/update05/</id>
    <published>2017-05-03T07:06:35.000Z</published>
    <updated>2017-05-07T09:12:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<h3 id="何处是归途"><a href="#何处是归途" class="headerlink" title="何处是归途"></a>何处是归途</h3><p>出门在外有段时间了，也许自小地方走出来的人，从来都会带着一股小家子气的不适应。</p>
<p>在外面的生活其实也很简单，每天就是为了生活奔波劳累，平常娱乐活动也是很少。自然这也许和职业有很大的关系，但触景伤情这种事情实在无法避免。说实话我很想念原来和朋友喝酒聊天的日子，我一直希望通过自己的努力，然后再回到我原来生活的地方和朋友能够有个隔三差五的小聚。但时间过去，也越发觉得这不过是这个时代里的奢望。</p>
<p>这世界太快了，在小地方你可能感受不到，或者说你感觉不是很明显。而当你处在大环境的时候，你便觉得就算你不走，周围也会把你拖着走。这不是开玩笑，大城市就是生活节奏特别快的地方，这也是我一直以来都不太适应的地方，所以今天才会发出此问。</p>
<h3 id="每日修炼"><a href="#每日修炼" class="headerlink" title="每日修炼"></a>每日修炼</h3><p>原来上学的时候一直就没养成很好的习惯，所以在外面也确实把自己给坑惨了。很多事情似乎一下安排不过来的感觉，让自己觉得非常累。所以在这里除了不断删删改改自己的时间表外，自然也摸索到生活的一丝小诀窍。时刻把自己整理得有条不紊，总会让人得到意想不到的好处。所以这时候你要克服心中的懒，去坚持把小事做好，每一件拖沓的事情背后，总会倾轧你其余的生活时间。如果你不在意这些的话，就像切菜的砧板，你平常很少清洗，那么留下来的污渍总会有一天再也洗不去，事实上每次切完菜后清洗的时间不过一分钟。所以何必为了那一分钟的小懒，而在日后丢掉一整块砧板呢？</p>
<p>所以每日的修炼就是把习惯整理好，不过拖沓的人也许有他自己的道理。比如像前辈先人里出的艺术家同科学家似乎于生活细节上确实做得不是很好，这可能是你的目标，自然与我无关。也有可能这么多年来，在武侠的世界里，邋遢爱喝酒的大叔总是那种世外高人，所以你的目标便是为了此生能够扮猪吃老虎，那其实想来也是挺不错的，恩，祝好。</p>
<h3 id="事出总有因"><a href="#事出总有因" class="headerlink" title="事出总有因"></a>事出总有因</h3><p>原来我逛得比较多的是简书和知乎，但现在我基本不去简书了。知乎至少还有一大堆哪怕有营养或者无营养的问答，但简书已经沦为一大片成功学贩卖才学的地方了。从功名成就来说，读书人以前最大达念头便是加官进爵，光耀门楣。这似乎是千古不变的道理，哪怕到了近时代。我从小听我爷爷讲得最多的一句话便是“万般皆下品惟有读书高”，可他这般那般劝我，我也开始像这般靠拢吧。</p>
<p>但学习总归是有些别的用处，不一定非要在功名利禄间做选择。如是我想，万般皆一样，读书使我快乐。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;何处是归途&quot;&gt;&lt;a href=&quot;#何处是归途&quot; class=&quot;headerlink&quot; title=&quot;何处是归途&quot;&gt;&lt;/a&gt;何处是归途&lt;/h3&gt;&lt;p&gt;出门在外有段时
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>于众生百态</title>
    <link href="http://yoursite.com/2017/05/03/update04/"/>
    <id>http://yoursite.com/2017/05/03/update04/</id>
    <published>2017-05-03T03:33:33.000Z</published>
    <updated>2017-05-03T07:06:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>昨晚又是没耐住性子，硬是熬到两三点钟才睡。</p>
<p>以前都是很不喜欢熬夜的，只是最近都有些抑制不住自己，总是不小心看钟表的时候，便是到了极晚的时候了，也许时光一直都是这样偷偷溜走的吧。已经这样熬过了一段时间了，但是上班的时候，总是要逼着自己早起的，所以清晨的时光里，总会有股对世界朦胧的观察力。好像与世间要若即若离，但又下一秒又生出举世皆静的感觉。说白了，其实就是睡眼朦胧看世界的时候，有些别样的情绪罢了。</p>
<h4 id="你看众人"><a href="#你看众人" class="headerlink" title="你看众人"></a>你看众人</h4><p>我喜欢路上走着，看不同的人，看不同的景，想不同的事。</p>
<p>其实我也不知道自己在看什么，每次走回去的时候，不会多记得路上几个人的脸，不会想今天那颗树下怎么没放那个熟悉的自行车，有时候甚至还会想，刚在路上想到啥？只是我知道在路上的时候我可以想很多问题，一直都想到自己捉摸不到的边际里，可以思考生活的意义这些重要，也可以考虑一下刚才踩到一堆狗屎的粗俗。只是日子平淡之下，并没有太多意外。</p>
<p>只是每个人都有一种姿态在这个世间，路过人群的时候有时候也会感受到世界离你而去的孤寂感，因为你站在人群里，但就是找不到自己的归属感。你路过拐角，看到一群民工坐在树荫下，叉着大脚丫子，拿着手机说着听不懂的话语；或者再往前走上一段距离，就有许多大清早坐在运输车里打瞌睡的人，似乎在等待下一个货单的到来；或是衬衣，锃亮的皮鞋的上班族，他们匆忙赶路的样子，总能让你在某处觉出好玩的味道。</p>
<h4 id="看自己"><a href="#看自己" class="headerlink" title="看自己"></a>看自己</h4><p>每日里走的路都是相同的部分，甚至开始熟悉几分钟自己可以走到哪个定点，如果以现在的速度又需要多久的时间，路上看哪个妹子的眼神要炙热一些，又或者眼神闪避是不是给了对方一些不好的感觉。我尽量让自己表情适当，眼神坚毅，因为至少这样不至于给人第一印象很坏。可是我为何总是这般小心翼翼呢？或许我从来都是想错了，我有什么理由不小心翼翼呢？这两个问题之间，便是截然不同的两种态度。虽然只是从无聊的行走了衍生出来一堆莫名其妙的问题，并不是多么深奥难解的话题罢了。但我既然自我思考，想来还是有几分戚戚然的味道在里面。个中滋味，奇妙无穷也是说不准的。</p>
<p>然，看众生相，却难看清自己之相。我们总能感觉到众生相里看到自己的影子，所以很多时候总觉得看到别人的时候，一眼看到了自己未来的模样。所以很多时候，我们在潜意识里看到的，我们的人生就该是这个模样的，也就添了很多莫名的恐惧。</p>
<h4 id="去以后"><a href="#去以后" class="headerlink" title="去以后"></a>去以后</h4><p>无论多少忧愁烦恼，终究是抵不过这吃饭喝水的大事。</p>
<p>所以在路上依旧看那些路人，依旧看自己同世界隔离，依然戚戚然想写乱七八糟的事。却也不得不说：该来都会来，不来的也不会不请自来。愿时间能走慢些，你我能在人海里多看彼此一眼，惺惺相惜！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨晚又是没耐住性子，硬是熬到两三点钟才睡。&lt;/p&gt;
&lt;p&gt;以前都是很不喜欢熬夜的，只是最近都有些抑制不住自己，总是不小心看钟表的时候，便是到了极晚的时候了，也许时光一直都是
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>关于ftp的一点</title>
    <link href="http://yoursite.com/2017/05/02/update03/"/>
    <id>http://yoursite.com/2017/05/02/update03/</id>
    <published>2017-05-02T02:21:52.000Z</published>
    <updated>2017-05-02T07:01:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>昨晚弄了一下服务器，发现今早起来发现部署的网页有些问题，便四处找了找问题。</p>
<h3 id="项目上传后Premission"><a href="#项目上传后Premission" class="headerlink" title="项目上传后Premission"></a>项目上传后Premission</h3><p>因hexo采用的ftpsync插件，经常有很多问题。要不然就是连不上服务器，要不然就是node莫名其妙报错，说实话我是实在想换了，但暂时还没有一个很好的替换方案。暂时先折腾下。</p>
<p>一般对Linux接触过的人都会对Premission比较敏感，我本地上传之前检查了自己的目录情况下，文件夹755，文件644。不知道文件权限的请自行百度。听过的一种说法是尽量保证页面的安全性，但不做评论吧。我遇到的问题是，我的文件夹上传到服务器上的时候权限变成了700。</p>
<p>PS：假设你创建了用户组hexo，然后你没有专门用于ftp上传的话，请记得检查hexo目录的所有者，否则ftp上传的时候很容易报错<code>fatal 550</code>。更改用户组：</p>
<p><code>sudo chown -R hexo:hexo /home/path</code></p>
<p><strong>服务器情况：</strong></p>
<ul>
<li>建立了专门的用户组来作为ftp上传。</li>
<li>文件可以上传，index页面可以显示，但是二级页面后的页面一直是访问不到。</li>
</ul>
<p><strong>解决方法：</strong></p>
<ol>
<li>先检查自己的vsftpd.conf文件，查看 local_umask=022是否放开注释。注意，修改配置后记得重启vsftpd。</li>
<li>如果以上配置没有生效，我在另外一个网站看到一个方案，只是我没测试过：在网站根目录下<code>umask=0022</code>，测试上传不成功的话<code>vi .bashrc</code>在文件中另起一行输入<code>umask 022</code>。保存后重启sshd </li>
</ol>
<h3 id="解决以往文件权限问题"><a href="#解决以往文件权限问题" class="headerlink" title="解决以往文件权限问题"></a>解决以往文件权限问题</h3><p>以下两个批量处理命令</p>
<ul>
<li>将文件夹权限处理为755；<code>find -type d|xargs chmod 755</code></li>
<li>将文件批量处理644；<code>find -type -f|xargs chmod 644</code></li>
</ul>
<p><strong>请在目标目录下处理</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨晚弄了一下服务器，发现今早起来发现部署的网页有些问题，便四处找了找问题。&lt;/p&gt;
&lt;h3 id=&quot;项目上传后Premission&quot;&gt;&lt;a href=&quot;#项目上传后Prem
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>新婚燕尔</title>
    <link href="http://yoursite.com/2017/05/02/update02/"/>
    <id>http://yoursite.com/2017/05/02/update02/</id>
    <published>2017-05-02T01:14:57.000Z</published>
    <updated>2017-05-02T01:16:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>想来时光都是易逝的，不然何至于你今日都嫁做人妇呢？</p>
<p>只不过说的是顽笑话，在你新婚的日子里，可惜出了些莫名的状况，不好去当面给你道喜了。但想来现在的你也是幸福快乐的，所以远方的我，送上默默的祝福，自然也能寥解心中慰藉。很多事情都是意外，但当你走进殿堂的那一刻，自然你是做好了婚姻的准备，其实这些年来我也一直在想象自己到了那一刻会是个什么感觉，但想过很多，总觉得还是差些味道。可能结婚这种事，确实需要亲身体会才会知道到底是何种滋味。年岁总会增长的，婚姻这种事情不出意外，应该是每个人都需要经历的。只是你自然而然的前行，终归让我觉得有些意外罢了。</p>
<p>不知昨夜的你心情是怎样，是否安稳的睡觉。想起我们认识至今似乎已经是九个年头了，从当初看你口直心快到今日的不忘初心，我的朋友，你依然还是我当初印象中的那个人。虽然在为人处世上你总归是有些慢半拍的样子，可内心依旧是温柔善良的模样，你打起人来，手从来不知道轻重；骂起人来，自然也是颐气指使。或许这让那些不太理解的人，总觉得你没有温婉的天分，就比如像成老倌。我至今都记得他当初骂你们的那些话，但现在想来只觉得是温柔的过去拂过，自然是一笑而过。</p>
<p>你今天总归是忙的，从大清早红妆缕缕，等待接亲队伍，直到仪式开始，分发喜糖。想来直到午夜都是很难停歇下来，不过毕竟还有一大堆亲朋与好友在旁，还有结婚的这股喜庆劲，应该会是很美的场景。然而过了今天，你却要和过去开始告别，开始两个人的日子。你也许学不会勤以持家，也许做不出美味的饭菜，但你总会开始用心去做这些事。也许结婚了，离梦想也越远了，但希望你还能像以前那般，过自己想要的生活。</p>
<p>似乎话至于此，我也不知道自己该如何。</p>
<p>就祝福你们共修百年之好吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想来时光都是易逝的，不然何至于你今日都嫁做人妇呢？&lt;/p&gt;
&lt;p&gt;只不过说的是顽笑话，在你新婚的日子里，可惜出了些莫名的状况，不好去当面给你道喜了。但想来现在的你也是幸福快
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>子曰：之乎者也</title>
    <link href="http://yoursite.com/2017/04/30/update01/"/>
    <id>http://yoursite.com/2017/04/30/update01/</id>
    <published>2017-04-30T09:08:04.000Z</published>
    <updated>2017-04-30T10:00:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>有段时间没来写东西了，总是对生活有些误解，然后思前想后，却依然不知所谓地过完每天。想来生活确实一直没什么明确的目标，自然在其中的纠葛也让自己在彷徨中更费心神。努力确实有段时间了，但想来自己依旧是过得不快活的。虽在人生路上自我探索了许多，只是过往的经验里，却太少能在未来的道路上做些指引，所谓更添彷徨，说的大概就是如此吧。</p>
<p>简单回忆了一下过往，确实年岁越大，似乎对自己的反思逐渐减少，也很少有坚持。越来越多的事情在得过且过间就变长了过往的罪恶感。只是人总是有些关于自己的惰性与理性的思考，原以为自由放纵的生活里，总能去摸索自己心之所向，究竟在何处？然而，自由懒散惯了，也是连基本自律也是有些问题。生活的圈子越来越大，然而心却越来越小了。只是终究不想自己在过去的事情做太多苛责。一来，过往的错误终究是在过往里哂笑，无论如何面对都是一样的结果，二来，由不同的时间看不同的问题总归是不一样的态度，过去的自己所做的决断，总归是考虑了一些，但不可避免因年岁经验局限而做了错误的事情。我想来自己这不是为了过去的错误而自欺欺人，生活总不能在悔恨中就可把握未来的人生。我想抬眼来未来，便是过去这些年来自己对自己比较满意的地方了。</p>
<p>过去的时光里，我席常过虑，这确实是自己比较遗憾的地方，在该做年轻人的岁月里暮气蔼蔼，在成熟的岁月中却妄想天真烂漫，这种本末倒置我想来不是我一个人有过这种感觉。只是考虑到自身在过去的日子里患得患失以致养成了今日的心性，确实非我之过，乃时之罪也。我出生于一个简单的家庭，从小父辈便教我小心谨慎求得生存之道。自然于世间不平事，少了许多有温度的想法。但思来想去，所有的事情至少还能找到些许原因，总不至于过多迷茫。</p>
<p>然则，迷茫还少吗？想起以前的岁月，自然还是对生活有更多的思考，时至今日却只是安平度日，少了许多激情与耐心。只是终归没什么目标，自然对于得过且过自且安适。但仔细想来似乎也是不对，少年之时，自然于事有诸多想法，做事自然有股牛犊之勇，而现在却在事情还没开始之前便已拒绝自我，自觉事不可为故而不为。所以更多的未来，在心里畏惧更多，细思极恐。</p>
<p>只是夫子说了那么多之乎者也，想来也是想要我们这些后世之人，也能少些迷茫之愿。</p>
<p>而我师那么多之乎者也，不外乎学个安世之勇罢了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有段时间没来写东西了，总是对生活有些误解，然后思前想后，却依然不知所谓地过完每天。想来生活确实一直没什么明确的目标，自然在其中的纠葛也让自己在彷徨中更费心神。努力确实有段时
    
    </summary>
    
      <category term="琐碎" scheme="http://yoursite.com/categories/%E7%90%90%E7%A2%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>微信公众号开发（二）</title>
    <link href="http://yoursite.com/2017/03/21/weixin2/"/>
    <id>http://yoursite.com/2017/03/21/weixin2/</id>
    <published>2017-03-21T04:07:42.000Z</published>
    <updated>2017-03-21T04:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>其实说来公众号开发倒不是一定需要配置服务器的<strong>https</strong>，只是上一段时间配置服务器，也可能以后需要在开发小程序的时候可能会用到Https，所以顺带就配置一下吧。</p>
<h4 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h4><p>说真的，HTTPS对我来说也是陌生的很，只知道这是一种更加安全的连接方式，老大说HTTPS在信息加密以及在线支付的领域运用得多，但如果是推广的内容的话，就不会使用HTTPS，因为HTTPS不利于优化SEO，具体是如何，还有待研究。个人也是可以创建证书，也可以在第三方平台申请CA证书。但从2016年10月21日开始，Chrome等浏览器不再信任之后的CA证书，所以就算第三方申请得到的免费的证书也可能会被Chrome警告。<br><a id="more"></a></p>
<h4 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h4><p>本来是在度娘找的教程申请了一个证书，StartCom，但配置好之后还是被Chrome警告，这里我就不再赘述了，说一下我在其中配置中遇到的问题吧。如果你有一台云服务器的话，我的是Ubuntu：<br><code>openssl req -new -newkey rsa:2048 -nodes -keyout laobuluo.com.key -out laobuluo.com.csr</code></p>
<p>当然这个命令是需要你自己变通的，使用该命令之后会生成在你的当前目录下。在这个过程中只需要注意在提示你输入Common Name的时候记得将你的完整域名填进去就可以了。一般Ubuntu都自带了openssl，其余请自行测试，当然其中的解密密码也别忘记了。</p>
<h4 id="Apache依赖"><a href="#Apache依赖" class="headerlink" title="Apache依赖"></a>Apache依赖</h4><p>开启SSL，Apache需要开启依赖模块，首先可以试试命令<code>a2enmod ssl</code>如果系统提示你<code>Module ssl already enabled</code>则表示成功，如果没有看到信息，则可以用以下命令：</p>
<p><code>ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled/ssl.conf</code><br><code>ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled/ssl.load</code></p>
<p>这两条命令是开始SSL模块，网上有些教程说要改动这两个配置文件，其实这和Apache的版本有关系。</p>
<p>关联好模块之后，在你的sites-available下会出现一个default-ssl.conf文件，里面就是默认的SSL配置文件。回到你刚才的生成证书的目录下，将证书文件放到你喜欢的目录下，我放在/etc/apache2/ssl目录下，这样方便以后自己查找等，但请仁者见仁。</p>
<p>编辑你的default-ssl.conf配置，为了方便我还是贴一份我的文件吧：</p>
<pre><code>&lt;IfModule mod_ssl.c&gt;
        &lt;VirtualHost _default_:443&gt;
        ServerName www.test.com
        //这里请填写你的证书中的CommonName
        DocumentRoot &quot;/home/test/public/&quot;
                &lt;Directory &quot;/&quot;&gt;
                        Options Indexes FollowSymLinks
                        AllowOverride All
                        Require all granted
                &lt;/Directory&gt;

        ErrorLog &quot;/var/log/apache2/errorssl-test.log&quot;
        CustomLog &quot;/var/log/apache2/accessssl-test.log&quot; combined
                SSLEngine on
                SSLCertificateFile     /etc/apache2/ssl/1_www.test.com.crt
                //假设我们将生成的证书和Key文件放在/etc/apache2/ssl下，名字分别是
                //1_www.test.com.crt以及2_www.test.com.key
                #SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
                SSLCertificateKeyFile /etc/apache2/ssl/2_www.test.com.key
                #SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
                &lt;FilesMatch &quot;\.(cgi|shtml|phtml|php)$&quot;&gt;
                                SSLOptions +StdEnvVars
                &lt;/FilesMatch&gt;
                &lt;Directory /usr/lib/cgi-bin&gt;
                                SSLOptions +StdEnvVars
                &lt;/Directory&gt;
                #   &quot;force-response-1.0&quot; for this.
                BrowserMatch &quot;MSIE [2-6]&quot; \
                                nokeepalive ssl-unclean-shutdown \
                                downgrade-1.0 force-response-1.0
                # MSIE 7 and newer should be able to use keepalive
                BrowserMatch &quot;MSIE [17-9]&quot; ssl-unclean-shutdown

        &lt;/VirtualHost&gt;
&lt;/IfModule&gt;

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
</code></pre><p>配置多个虚拟主机和80端口是一样的，但注意80端口和443端口不能配置在同一个配置文件里。</p>
<p>配置完成后，由于Ubuntu下Apache的原因，记得关联文件：<br><code>ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled/default-ssl.conf</code></p>
<p>然后重启Apache:<code>apachectl restart</code>如遇失败，请检查日志。</p>
<p><strong>注：</strong>如果在重启遇到需要解密私钥，请进入到私钥目录下，输入如下命令：</p>
<p><code>openssl rsa -in test.key -out test.key</code></p>
<p>完成后的配置在浏览器里会被警告，没有小绿锁，原因已经说过了，另外介绍大家，腾讯云下赠送免费的证书且有小绿锁。</p>
<p><a href="https://www.goldcao.com" target="_blank" rel="external">测试效果</a></p>
<p>[To Be Continue!]</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实说来公众号开发倒不是一定需要配置服务器的&lt;strong&gt;https&lt;/strong&gt;，只是上一段时间配置服务器，也可能以后需要在开发小程序的时候可能会用到Https，所以顺带就配置一下吧。&lt;/p&gt;
&lt;h4 id=&quot;SSL&quot;&gt;&lt;a href=&quot;#SSL&quot; class=&quot;headerlink&quot; title=&quot;SSL&quot;&gt;&lt;/a&gt;SSL&lt;/h4&gt;&lt;p&gt;说真的，HTTPS对我来说也是陌生的很，只知道这是一种更加安全的连接方式，老大说HTTPS在信息加密以及在线支付的领域运用得多，但如果是推广的内容的话，就不会使用HTTPS，因为HTTPS不利于优化SEO，具体是如何，还有待研究。个人也是可以创建证书，也可以在第三方平台申请CA证书。但从2016年10月21日开始，Chrome等浏览器不再信任之后的CA证书，所以就算第三方申请得到的免费的证书也可能会被Chrome警告。&lt;br&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>微信公众号开发（一）</title>
    <link href="http://yoursite.com/2017/03/15/weixin1/"/>
    <id>http://yoursite.com/2017/03/15/weixin1/</id>
    <published>2017-03-15T02:20:38.000Z</published>
    <updated>2017-03-15T02:24:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h4><p>说实话官方文档真是让人很纠结，看了会，还是有很多地方没看明白，各种查找各种坑！</p>
<ul>
<li><strong>系统：</strong>Mac Os EI captian11.4</li>
<li><strong>服务器：</strong>Ubuntu14.04</li>
<li><strong>环境：</strong>PHP5+MYSQL+APACHE2.4.7</li>
<li><strong>软件：</strong>transmit</li>
</ul>
<p>具体公众号的申请什么就不再赘述，请自行百度。<a href="https://mp.weixin.qq.com/wiki" target="_blank" rel="external">官方Wiki</a>。</p>
<p>公众号申请之后，进入开发者权限，先基本配置连通自己服务器，百度上有些教程采用的是SAE什么的我没有试，但想来应该大同小异。进到公众号平台后进入基本配置<br><a id="more"></a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-832a28c5835302f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="公众号"></p>
<h4 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h4><p>服务器环境在Linux中可以直接配置LAMP集成环境，只是我没有采用这种方法，优劣不知。请自我尝试。</p>
<ol>
<li>配置Apache<code>sudo apt-get install apache2</code></li>
<li>配置Mysql<code>sudo apt-get install mysql-sql</code>，安装时会叫你设置root密码，同时配置一下依赖<code>apt-get install libapache2-mod-auth-mysql</code>，为支持php再安装一下<code>apt-get install php5-mysql</code>。</li>
<li>配置Php<code>sudo apt-get install php5</code>，<code>apt-get install libapache2-mod-php5</code></li>
</ol>
<h4 id="Apache虚拟主机"><a href="#Apache虚拟主机" class="headerlink" title="Apache虚拟主机"></a>Apache虚拟主机</h4><p>在Ubuntu下，Apache文件在<strong>/etc/apache2/</strong>目录下，系统默认目录在<strong>/var/www/</strong>，如不需要虚拟主机也可以直接在index等文件放在默认目录下。</p>
<p><strong>注：</strong>Linux下Apache的主配置文件为apache2.conf，并不是网上大部分说的htttpd.conf，但基本配置都差不多，只是Linux下的Apache分得更加细，我想这也许是为了更加方便管理吧。默认的文件不需要改动，如果你需要自己设置配置在httpd文件夹内，请将以下语句加进主配置文件内<code>IncludeOptional httpd/*.conf</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-3dc0c0d9e5bc9775.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="apache"></p>
<p>以上为目录结构。</p>
<p>进到sites-avaiable编辑000-default.conf文件以配置虚拟主机，注意其实在sites-avaiable文件内配置的项目并没有直接生效，而需要在sites-enable里将配置文件关联起来，这样的深意在哪里，我就不得而知了。<br>假如我们在sites-avaible目录下新建<code>vi test.conf</code></p>
<pre><code>&lt;VirtualHost *:80&gt;

        ServerName  dev.test.com
        //填写你自己的域名
        DocumentRoot &quot;/home/test/weixin/public/&quot;
        //自定义目录，请将目录权限开到755以上，避免premission denied
                &lt;Directory &quot;/&quot;&gt;
                        Options Indexes FollowSymLinks
                        AllowOverride All
                        Require all granted
                &lt;/Directory&gt;

        ErrorLog &quot;/var/log/apache2/errordev-test.log&quot;
        CustomLog &quot;/var/log/apache2/accessdev-test.log&quot; combined

&lt;/VirtualHost&gt;
</code></pre><p>关联命令<code>sudo ln -s /etc/apache2/sites-available/test.conf /etc/apache2/sites-enabled/test.conf</code></p>
<p>一般来说我们都是修改默认配置文件000-default.conf，具体如何配置，请根据自己的情况选择。</p>
<p>啰嗦一句，这里首先最好先测试一下PHP，在很多情况下，PHP总会出一些莫名其妙的问题，可以在你的DocumentRoot目录下<code>vi index.php</code>，将以下内容放进去<code>&lt;?php phpinfo(); ?&gt;</code>，然后浏览器访问，出现如下界面则保证PHP正常运行：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-0112f0f861cf1319.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="php"></p>
<p>如没有正常显示，请百度自行解决。</p>
<h4 id="配置微信接口"><a href="#配置微信接口" class="headerlink" title="配置微信接口"></a>配置微信接口</h4><p>绕了这么大一个圈，终于来到我们的目的，首先在Wiki里下一份测试PHP配置，地址：<a href="http://mp.weixin.qq.com/mpres/htmledition/res/wx_sample.20140819.zip" target="_blank" rel="external">PHP示例代码</a></p>
<p>我通过transmit用ftp将本地文件传到服务器上，具体你采用何种方式，请自我斟酌。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-cafe5c697f62be6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Setting"></p>
<p>然后提交你的配置，成功的话，就恭喜你已经将基本配置完成好了。</p>
<p>[To Be Continue!]</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本流程&quot;&gt;&lt;a href=&quot;#基本流程&quot; class=&quot;headerlink&quot; title=&quot;基本流程&quot;&gt;&lt;/a&gt;基本流程&lt;/h4&gt;&lt;p&gt;说实话官方文档真是让人很纠结，看了会，还是有很多地方没看明白，各种查找各种坑！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统：&lt;/strong&gt;Mac Os EI captian11.4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器：&lt;/strong&gt;Ubuntu14.04&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环境：&lt;/strong&gt;PHP5+MYSQL+APACHE2.4.7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;软件：&lt;/strong&gt;transmit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体公众号的申请什么就不再赘述，请自行百度。&lt;a href=&quot;https://mp.weixin.qq.com/wiki&quot;&gt;官方Wiki&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;公众号申请之后，进入开发者权限，先基本配置连通自己服务器，百度上有些教程采用的是SAE什么的我没有试，但想来应该大同小异。进到公众号平台后进入基本配置&lt;br&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>关于Mac下配置Apache</title>
    <link href="http://yoursite.com/2017/03/09/apache/"/>
    <id>http://yoursite.com/2017/03/09/apache/</id>
    <published>2017-03-09T02:32:59.000Z</published>
    <updated>2017-03-09T05:27:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>个人因为正在前端路上，加上原因换了新mac，需要再另行配置电脑服务器环境，记录下其中所遇到问题，留待查阅。<br><strong>注:OS Captian EI 11.4</strong></p>
<h4 id="Apache2"><a href="#Apache2" class="headerlink" title="Apache2"></a>Apache2</h4><p>基本mac都会自带Apache、Php等，具体查看命令 <code>apachectl -v</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-0383ef72d51e694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Version"></p>
<p>不同版本之间会有些许区别。<br><a id="more"></a></p>
<p>Mac下的Apache配置文件保存在<strong> /etc/apache2/ </strong>目录下，目录如下<br><img src="http://upload-images.jianshu.io/upload_images/2741993-e8cb137fdf663fb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Mulu"></p>
<p>建议操作之前先做备份，这样有利于应对严重后果。操作apache目录一般都需要root权限，退回<strong> /etc/ </strong>下<br><code>sudo cp -R apache2 /etc/apache2_backup</code></p>
<h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><p>unix下的基本vim请自行百度，如果你的apache只需要配置单个端口的话，只需要在<strong> httpd.conf </strong>文件中修改配置即可：</p>
<ul>
<li>找到LoadModule alias_module libexec/apache2/mod_alias.so将前面的<strong> # </strong>去掉</li>
<li>去掉LoadModule rewrite_module libexec/apache2/mod_rewrite.so的<strong> # </strong></li>
<li>找到 </li>
</ul>
<pre><code>

&lt;Directory /&gt;
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
&lt;/Directory&gt;
</code></pre><p>将配置修改如上。保存退出<strong> apachectl restart </strong>重启Apache，在浏览器里访问127.0.0.1,出现<strong> is work </strong>，则基本差不多了。</p>
<h4 id="配置虚拟主机（VirtualHost）"><a href="#配置虚拟主机（VirtualHost）" class="headerlink" title="配置虚拟主机（VirtualHost）"></a>配置虚拟主机（VirtualHost）</h4><ol>
<li>配置虚拟主机更符合我们的开发习惯，首先在httpd.conf配置中放开Include /private/etc/apache2/extra/httpd-vhosts.conf注释。</li>
<li>进入目录<strong> ~/apache2/extra/ </strong>,编辑配置httpd-vhosts.conf,系统默认有两个虚拟主机，只不过基本没什么作用：</li>
</ol>
<pre><code>&lt;VirtualHost *:80&gt;
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot &quot;/usr/docs/dummy-host.example.com&quot;
    ServerName dummy-host.example.com
    ServerAlias www.dummy-host.example.com
    ErrorLog &quot;/private/var/log/apache2/dummy-host.example.com-error_log&quot;
    CustomLog &quot;/private/var/log/apache2/dummy-host.example.com-access_log&quot; common
&lt;/VirtualHost&gt;
</code></pre><p><strong>ServerAdmin:</strong>网站管理者，一般填写邮件地址，个人开发无所谓。<br><strong>DocumentRoot:</strong>你设置的个人网站根目录，在设置这个目录的时候，很多时候都会受到权限的影响而报错而产生permission denied,请大家注意。<br><strong>ServerName:</strong>这就是你想要设置的访问名字了，由你自己定</p>
<p>放一份我个人的配置</p>
<pre><code>&lt;VirtualHost *:80&gt;
    ServerAdmin sanchuan@linofu.dev
    DocumentRoot &quot;/Users/sanchuan/Documents/workspace/html5&quot;
    ServerName linofu.dev
    #ServerAlias www.dummy-host.example.com
    ErrorLog &quot;/private/var/log/apache2/linofu.dev-error_log&quot;
    //另外对新手说一下，请最好记住你的错误日志，因为配置的时候，可以
    //tail /private/var/log/apache2/linofu.dev-error_log就可以在控制台中找到问题，再去找别人的时候更好解决。
    CustomLog &quot;/private/var/log/apache2/linofu.dev-access_log&quot; common
    &lt;Directory &quot;/&quot;&gt;
        Options Indexes  FollowSymLinks
        //这句在这里将可以配置你的服务器在没有Index的时候，产生目录结构。见下图
        #AllowOverride All
        #Order deny,allow
        #Allow from all
        Require all granted
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;
</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/2741993-c71e0e55bf47e64d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Index"></p>
<ol>
<li>保存配置退出，回到 <strong>/etc/</strong>下，编辑你的<strong>hosts</strong>文件；将你的<strong>ServerName</strong>绑定在127.0.0.1后。重启apache</li>
</ol>
<p>PS：如果你觉得配置实在麻烦的话，Mac下有集成环境，具体用什么，你可以自己决定。</p>
<p>[To Be Continue]</p>
<!--toc-->
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;个人因为正在前端路上，加上原因换了新mac，需要再另行配置电脑服务器环境，记录下其中所遇到问题，留待查阅。&lt;br&gt;&lt;strong&gt;注:OS Captian EI 11.4&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;Apache2&quot;&gt;&lt;a href=&quot;#Apache2&quot; class=&quot;headerlink&quot; title=&quot;Apache2&quot;&gt;&lt;/a&gt;Apache2&lt;/h4&gt;&lt;p&gt;基本mac都会自带Apache、Php等，具体查看命令 &lt;code&gt;apachectl -v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2741993-0383ef72d51e694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Version&quot;&gt;&lt;/p&gt;
&lt;p&gt;不同版本之间会有些许区别。&lt;br&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>二三事难述</title>
    <link href="http://yoursite.com/2017/03/06/follow/"/>
    <id>http://yoursite.com/2017/03/06/follow/</id>
    <published>2017-03-06T02:44:25.000Z</published>
    <updated>2017-03-08T09:52:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>天也不一定好看，心情不一定差。</p>
<p>只是觉得有些话想自言自语一下，权当无聊或是自我消遣。</p>
<p>突然想到了很多不一样的事情，很多年前，我做了一些很无聊的决定，但似乎在今天我突然看到了这个决定对于我现在生活的影响，虽然我有时候有点自欺欺人。但我明白我仍在潜意识里认为自己是一个有主见的人，但其实原因我在上一句话里说过了。似乎一直以来我都在刻意的追求一种生活的状态，一种好像让自己心安理得放纵的理由，我明白自己在生活的过程中已经开始向我的父辈们看齐，也许那样的生活曾在我的理想中被我哂笑过。通过当代的一些工具，我浏览到了一些我原本或许经历不到的信息，所以有时候我会告诫自己，是时候和过去的一些事情说再见，但目标同起点之间这段过程，通常会让我滞留或者干脆返回起点。这样的事情一旦经历过第一次，自然就会有第二次了，自然也就会有习惯的那天。<br><a id="more"></a></p>
<p>人性里总会有很多的弱点，但很多人就很不容易承认自己的弱点，我就是这类人中的一员。我曾经在别人的文章底下留下：生活不是简单的对错，而是拥有在对错中不断前行的力量。当我们习惯了老师给试卷判分来决定你个人的能力大小的时候，你总会错觉，生活原来的样子应该就是原本对的事情就是对的，错误的事情就会是错误的。虽然我记得不是很清楚，在《逻辑思维》关于讲《巨婴国》的这一期里，我当时有点觉得自己很像这样的巨婴，可我还会在心理为自己辩解那些我还侥幸保留下来的不像巨婴的那些片段来麻痹自我。尽管我思考得很少了，可我有时候还是会想克服下自己的弱点，想想生活对我的意义在哪里，哪怕我始终都找不到答案。</p>
<p>一个猎人的儿子，最有可能成为一个猎人，而一个农民的儿子也是最有可能成为一个农民。我知道在我们身边不乏有猎人的儿子成了艺术家或者别的什么的异类，农民的儿子也许会成为领导人。但这些都是个例，但很多人都会因为这样的事情而恐惧。因为猎人的儿子变成了艺术家，很可能其余的猎人集体会集体嘲讽你这个想要成为农民的猎人的儿子。所以你觉得你做什么都是兢兢业业，不敢犯下一点错。你可能会在这个群体里挣扎，有人成功了，自然皆大欢喜，但想来过程也并不一定会美好。最可怕的事情是你还没开始，你就已经完全看到了你失败的样子以及你会遭受的苦难。我不是不知道那些拥有大毅力的人总会力挽狂澜改变命运，但大部分人都是做不到的。说到这里，我想解释一下：为什么农民的儿子很容易变成农民？因为农民教你的一大堆道理总是最适合如何像一个农民生存于世，就算他不断提供给你吸收新知识，不断输送你深造，他总会告诉你：不要逾越，要安分守己；不要投机，要脚踏实地以及等等诸如此类的理论，试问成为一个领导有时候就是需要你另辟蹊径，而你又有多少次天赋异凛来接受这些未知的挑战呢？我知道这样的理论说起来，永远只不过是自圆其说，还好这只是我权当无聊~</p>
<p>写到这里的时候，我觉得思路似乎被什么打断了，所以我决定草草结束这些无聊的对话。生活对于每个人的意义都不一样，愿你能很快找到自己想要的一切。而我，也只能自求多福了~</p>
<p>【To Be Continue!】</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;天也不一定好看，心情不一定差。&lt;/p&gt;
&lt;p&gt;只是觉得有些话想自言自语一下，权当无聊或是自我消遣。&lt;/p&gt;
&lt;p&gt;突然想到了很多不一样的事情，很多年前，我做了一些很无聊的决定，但似乎在今天我突然看到了这个决定对于我现在生活的影响，虽然我有时候有点自欺欺人。但我明白我仍在潜意识里认为自己是一个有主见的人，但其实原因我在上一句话里说过了。似乎一直以来我都在刻意的追求一种生活的状态，一种好像让自己心安理得放纵的理由，我明白自己在生活的过程中已经开始向我的父辈们看齐，也许那样的生活曾在我的理想中被我哂笑过。通过当代的一些工具，我浏览到了一些我原本或许经历不到的信息，所以有时候我会告诫自己，是时候和过去的一些事情说再见，但目标同起点之间这段过程，通常会让我滞留或者干脆返回起点。这样的事情一旦经历过第一次，自然就会有第二次了，自然也就会有习惯的那天。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>你最近还好吗？</title>
    <link href="http://yoursite.com/2017/01/05/before/"/>
    <id>http://yoursite.com/2017/01/05/before/</id>
    <published>2017-01-05T06:42:48.000Z</published>
    <updated>2017-01-05T08:55:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<h4 id="好久不见"><a href="#好久不见" class="headerlink" title="好久不见"></a>好久不见</h4><p>美梦之后便是无尽的空虚。</p>
<p>我也不知道为什么会突然想你，在离开你的大半年的时间里，我以为所有的一切都会随着时间淡去，我一直小心翼翼地避免让自己去触碰过去，但还是在不经意间就回了头。</p>
<p>也许记忆就是这般来折磨人的，我知道你温柔善良，不会来同我歇斯底里的辩论是非。但这样的结果只是我心里的负罪更重，我曾经蔑视的爱情同面包，现在就摆在我的眼前，我除了逃跑似的离开你，甚至连承诺我都给不起。很久以前我就在害怕这一天的到来，所以我没有过多地描述过以后的模样。只是你的样子终究还是在脑海里刻下了印记，看似浅显，却又难以磨灭。</p>
<p>我很想知道最近的你过得如何，在朋友圈看，在别人的口中听。从外在看来，我几乎没有认真去了解过你的一切，但内心却不断呼喊叫我去靠近你。可惜的是我这种心情还只能自我去享受，我想你也应该也会这样。所以我们大家一起在沉默中承受这接下来发生的一切，并在潜意识中默许了它就这样轻易的发生。虽然没有为难，但确实很难受。</p>
<a id="more"></a>
<h4 id="你最近好吗"><a href="#你最近好吗" class="headerlink" title="你最近好吗"></a>你最近好吗</h4><p>其实我最害怕的事情，还是有天突然听到你的身边多出一个身影。虽然你不再属于我，然而关于你的一切，我还想无耻的占据。理智总会扇我这种懦夫一大嘴巴子，然后再唾上几口。可即便如此，我还是会想回到你身边去，可能是因为我累了，可能是因为我又需要你了。这种混蛋的理由，让自己都觉得很可怕，所以我一直在努力克制自己的情绪，尽量把自己的视线从你的身边挪开。我不想把你平静的生活扰乱，而我也有许多自己需要去做的事情，比如：功成名就！</p>
<p>然而跌打滚爬的时候，总归是落下了一身伤痛，伤病也总会削弱人的意志以及一些别的东西。所以落在我的身上，也许需要的是一个疗伤的港湾，让我有段时间来喘息。可我知道这对你是不公平的，所以我还在忍，我希望自己能够挺过这段时间，把该想的问题都想明白。疼痛会将神经敏感降低，这样的话，也许会让我的想法有些改变。</p>
<p>但我其实最想问的还是：你最近好吗？我一直在努力说服自己，不要那么畏惧那些还没有到来的后果。我把我能够做到的最好给你不就可以了吗？道理我跟自己说过很多遍，但最后选择却是背道相驰。我也说不清楚为什么自己最后选了这样一条没有退路悬崖，然后还纵身一跃。</p>
<h4 id="太过畏惧"><a href="#太过畏惧" class="headerlink" title="太过畏惧"></a>太过畏惧</h4><p>从小我就身子骨弱，所以面对所有的一切我都不得不谨小慎微。这个习惯直到现在还是这样，轻易跨过的界限对我而言，只会让我觉得不真实。有人说：人内心里都有一个强大的反面，越正派的人，可能他做坏人的心比平常人大出不少。而对于我而言，我一直都在寻找放浪形骸的机会，但现阶段我是不敢的。因为我微薄的力量在现行的世界里获取一口口粮已是不易，我岂敢轻易放弃。说到底，只不过是卑微的在世间活惯了，也就养出一身卑微的姿态。</p>
<p>这是生活留给我的东西，即使我在这上面做了很多努力，但是起色并不大。我已经慢慢学会，很多事情不是一蹴而就的。很多人都说我不是很乐观的人，这我确实承认，但我心中总归认为自己不是一个悲观的人物。我只是对许多事情的期望都放得比较低罢了。</p>
<p>而现在，我只想自己能够拥有的不再是更多可以让自己在生活上满足的东西，而是另外一种精神世界里的东西。</p>
<p>让我再回到你身边。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;好久不见&quot;&gt;&lt;a href=&quot;#好久不见&quot; class=&quot;headerlink&quot; title=&quot;好久不见&quot;&gt;&lt;/a&gt;好久不见&lt;/h4&gt;&lt;p&gt;美梦之后便是无尽的空虚。&lt;/p&gt;
&lt;p&gt;我也不知道为什么会突然想你，在离开你的大半年的时间里，我以为所有的一切都会随着时间淡去，我一直小心翼翼地避免让自己去触碰过去，但还是在不经意间就回了头。&lt;/p&gt;
&lt;p&gt;也许记忆就是这般来折磨人的，我知道你温柔善良，不会来同我歇斯底里的辩论是非。但这样的结果只是我心里的负罪更重，我曾经蔑视的爱情同面包，现在就摆在我的眼前，我除了逃跑似的离开你，甚至连承诺我都给不起。很久以前我就在害怕这一天的到来，所以我没有过多地描述过以后的模样。只是你的样子终究还是在脑海里刻下了印记，看似浅显，却又难以磨灭。&lt;/p&gt;
&lt;p&gt;我很想知道最近的你过得如何，在朋友圈看，在别人的口中听。从外在看来，我几乎没有认真去了解过你的一切，但内心却不断呼喊叫我去靠近你。可惜的是我这种心情还只能自我去享受，我想你也应该也会这样。所以我们大家一起在沉默中承受这接下来发生的一切，并在潜意识中默许了它就这样轻易的发生。虽然没有为难，但确实很难受。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>熬过的青春</title>
    <link href="http://yoursite.com/2016/12/28/distance/"/>
    <id>http://yoursite.com/2016/12/28/distance/</id>
    <published>2016-12-28T07:46:45.000Z</published>
    <updated>2017-01-05T08:39:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为作者原创，转载请注明出处！</p>
</blockquote>
<p>话更少了，不是想法少了。<br>生活总是越变越匆忙，似乎身边的朋友都是这样，一打电话，回答总是很忙。而总在空间里看到他们说他们的无聊。我也觉得生活的脚步总是变得越来越快，有的人忙着学习，有的人忙着赚钱，有的人忙着结婚，然而对于我而言，似乎却只有忙着失去青春。我明明都还没怎么体会到青春的味道，它便要结束了。我总感觉大家都在催促我赶紧向前走，我不知道前方是什么，也不知道他们是否是知道。但似乎只要你不努力向前，你就不能进入他们的生活圈子，然后没有话题。</p>
<a id="more"></a>
<p>总在急着赶路，这身边的风景，却怎么也看不出个味道来。就像每次到一个地方，大家不断地拿着自己的相机照来照去，然后又匆匆地赶赴下一个战场。也许这些东西在你年老的时候是你生命的一种记忆。这种味道现在恐怕是没几个人知道，然而大家却都愿意这么做。这种时刻体会这生命苍老的感触不断地刺激你的生活。大多数人都在为了自己的生活而四处奔波，忙着在这个社会占据自己的一席之地，考取各种证明，获得各种成就，然后最后老了，功成名就的荣归故里，这是我所能想到的最好的结局了。 老妈总是说我是个没有上进心的人，曾经也有老师说我是一个悲观者。也许这些都是一些比较中肯的评价，我也没有那种想要奋起反驳的念头。自己活得越久就连那种激烈为自己辩驳的力气都失去了。</p>
<p>我想我总是年轻过的，至少在我的生理年龄上，我必须要越过那段经历，然后去体会我所该有的生活。我总在想自己走过的痕迹都在哪里。实实在在的要我说出我在这个阶段收获了什么，我却是哑口无言。从小学一路走到大学来，最明显的感觉就是自己越来越像个平凡人。不会像曾经的偶像悟空那样，会七十二变，也不可能突然在某一天拥有超能力去改变世界。 面对这个世界的不忿渐渐的保持沉默，回头想想自己真是可耻，小时候还说要把这世界的坏蛋都抓起来呢？然而我不敢告诉任何人。偶尔看电影的时候，总能看到很多热血的年轻人，在宣泄青春的能量。自己也在羡慕，但却只能羡慕罢了。然而说白了，大家都是地球人，为何别人做得到的事，我却连尝试的勇气都没有。</p>
<p>曾经的我也做过很多的“坏事”，现如今那些东西，也就只能偶尔和人家聊天的时候谈起。然后说完之后，看着别人若有所思回味你的故事的表情。便觉得生活的色彩也就不过如此，只是年岁越大，这些故事也越来越没有味道了。青春即将离去，身体里的激情已经不足以重新焕发一种新的色彩了。也便只能来感叹时间都到哪去了。稍微一回忆，就感觉这些事就好像多在昨天，小学的时候欺负过的人，因为没有及时回家被老妈骂，还欠了几个女孩子的零食，这些东西想着想着就失神了。看来我确实离失去青春已经不远了。我也得跟着大部队去自己的人生里追逐，莫名其妙的学了一些知识，交了一群朋友，现在想想，也不知道到底什么有用，什么没用。真的是麻烦，只不过面对这种麻烦却也只能无可奈何了。</p>
<p>假期在家也见了些许久不见的朋友，年轻人的面庞总是没有那么多的变化，但谁又能想到几分稚气脸的同学早已结婚生子，然后一番寒暄之后也便谈起了各自的最近。然而我总感觉难以寻找话题，大家的生活总没有那么多的交集，找不到话题也很正常。上大学之后我基本忘了自己的女人缘了，可他们几个非要和我提起，我也只能黯然伤神的回忆着自己单身已久，然后一通酒灌下之后，也不知道自己究竟说了些什么。也许有几句慷慨激昂的对白：找个女朋友不简单吗？</p>
<p>青春是自私的，总不能容忍别人太多的指责！<br>别人都是对的，那是不可能的，青春总有自己的理由去面对世界！<br>青春总有热血的，没有犯错的过去，那是缺憾！<br>只有怪青春过分热血，来不及挽留！ </p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为作者原创，转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;话更少了，不是想法少了。&lt;br&gt;生活总是越变越匆忙，似乎身边的朋友都是这样，一打电话，回答总是很忙。而总在空间里看到他们说他们的无聊。我也觉得生活的脚步总是变得越来越快，有的人忙着学习，有的人忙着赚钱，有的人忙着结婚，然而对于我而言，似乎却只有忙着失去青春。我明明都还没怎么体会到青春的味道，它便要结束了。我总感觉大家都在催促我赶紧向前走，我不知道前方是什么，也不知道他们是否是知道。但似乎只要你不努力向前，你就不能进入他们的生活圈子，然后没有话题。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>你不知道的HEXO deploy</title>
    <link href="http://yoursite.com/2016/12/26/hah/"/>
    <id>http://yoursite.com/2016/12/26/hah/</id>
    <published>2016-12-26T07:31:23.000Z</published>
    <updated>2017-01-05T08:45:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本博文为本人原创，转载需注明出处：</p>
</blockquote>
<p>因hexo搭建也有一段时间了，刚开始部署的时候，直接部署在了服务器上，还是有些不方便，每次写完都要vi。后来查查文档，发现了几种部署到服务器端的方法，自己特意找了一种试试，记录一下，方便自己，尽量方便大家。</p>
<p> <strong>注：</strong></p>
<p>本教程指next主题部署文件至服务器，不是Git。</p>
<p>官方提供了几种部署方案，我这里选择了ftpsync,至于为什么，只是因为我在用rsync遇到了一个比较严重的问题没有解决。等我研究明白了，再来补充。</p>
 <a id="more"></a>
 <!--toc-->
<p> <img src="http://upload-images.jianshu.io/upload_images/2741993-7338e2cfc5f7bddf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ftpsync"></p>
<p>以上是文档里提到的ftpsync的配置项，我看到有Blog上说这个插件会将本地目录里的所有文件同步成服务器一样的，但经过我测试，上传的时候只会上传public文件夹。所以ingore配置项你可以默认，由于我是将文件上传到服务器，为了方便所以我专门在我的服务器上创建了新用户专用作ftp上传：</p>
<p> <code>adduser ***//自己设置名称</code></p>
<p> 然后会提示你设置密码，然后一直默认设置就行了。这个命令比</p>
<p> <code>useradd ***</code><br> <code>useradd *** pass</code></p>
<p>方便多了</p>
<p>我服务器是ubuntu,其余操作系统请自行搜索。</p>
<h1 id="error1"><a href="#error1" class="headerlink" title="error1"></a>error1</h1><p>将配置文件_confiig.yml配置完成后，然后想着开心的</p>
<p><code>hexo g -d</code></p>
<p>然后报错 530 incorrect login</p>
<p>无论是在ftp里登录还是别的地方都报这个错误，没办好，只好先找度娘，最后不知道在哪位大哥的博客下找到了解决方案，只不过写的时候已经找不到那个链接了。报这个错误的主要原因是因为服务器端的vsftpd文件报错了：</p>
<p><strong>解决方法</strong></p>
<pre><code>$ sudo -s
$ vi /etc/vsftpd.conf
$ //找到 #write_enable=YES 将前面的#去掉
</code></pre><h1 id="error2"><a href="#error2" class="headerlink" title="error2"></a>error2</h1><p>登录的问题解决了，其实心里还在打鼓，果不其然：</p>
<pre><code>$ hexo clean
$ hexo g -d
</code></pre><p>还是报错，当时的错误代码没有截图，以致于现在不能给大家上原图了。但大致源码我还是可以写下来，大家自己对照吧。</p>
<pre><code>Colletting:
Errors events.js:160
        throw: ***

        TCP: ***
        onread: ***
</code></pre><p> 出现这个问题，建议大家还是找一下node的问题吧，我找了许久的答案最后也没能够说个所以然来,我当时的Node6.9.1。后来我是将自己的node重装了一遍，而且装的是Node4.7.0版本。这个问题就自动解决好了，如果有人知道，希望能不吝赐教。</p>
<h1 id="error3"><a href="#error3" class="headerlink" title="error3"></a>error3</h1><p>经历了前两个错误，我知道第三个错误也是避免不了的。再次部署<code>hexo g -d</code>遇到:<br><strong>premission denied 550</strong></p>
<p>一般操作过Linux系统的人都会知道这是因为缺少了权限，所以我先将服务器上的接收目录的权限放到了最大<br><code>$ chmod -R 777 ***//目录名</code><br>可依然还是报错550 </p>
<pre><code>MKDIR fail
      ***
550 : Cannot create a file when that file already exists
</code></pre><p>找来找去最后找到了这个大哥的Blog下：从他的Git下拉了一个src/parse.js文件修复了这问题。</p>
<p><a href="http://k99k.com/2015/hexo-ftpsync-bug/" target="_blank" rel="external">踩坑道人Blog</a> </p>
<p>然后一路开心的<code>hexo g -d</code><br>没报错，然后打开自己的的博客，哈哈显示正常，然后再点文章：</p>
<p>然后</p>
<h1 id="error4"><a href="#error4" class="headerlink" title="error4"></a>error4</h1><p>nginx 403 Forbidden<br>心里当真是问候了很多句苍天。没办法，继续折腾呗。我没有上面这位大哥厉害，console了三个小时，耐心地找了会百度就找到了一个解决方案：</p>
<pre><code>$ vi /etc/nginx.conf
//在第一行的位置有个user 将其修改为你的ftp账号如下：
//修改 ftp账号
$ user ftpuser
$ worker_processes
//重启Nginx:
$ service nginx restart
</code></pre><p>问题大概就这么多，欢迎交流指正。</p>
<h4 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h4><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本博文为本人原创，转载需注明出处：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因hexo搭建也有一段时间了，刚开始部署的时候，直接部署在了服务器上，还是有些不方便，每次写完都要vi。后来查查文档，发现了几种部署到服务器端的方法，自己特意找了一种试试，记录一下，方便自己，尽量方便大家。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;注：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本教程指next主题部署文件至服务器，不是Git。&lt;/p&gt;
&lt;p&gt;官方提供了几种部署方案，我这里选择了ftpsync,至于为什么，只是因为我在用rsync遇到了一个比较严重的问题没有解决。等我研究明白了，再来补充。&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器搭建：（三）AWS搭建Shadowsocks</title>
    <link href="http://yoursite.com/2016/12/07/ftp3/"/>
    <id>http://yoursite.com/2016/12/07/ftp3/</id>
    <published>2016-12-07T15:23:09.000Z</published>
    <updated>2017-01-05T08:44:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解AWS搭建shadowsock VPN</p>
<h2 id="为什么选择AWS"><a href="#为什么选择AWS" class="headerlink" title="为什么选择AWS"></a>为什么选择AWS</h2><p>作为一名程序员，因为经常需要查找各类文档以及框架的用法，所以很多时候都需要去看看外面的世界，当然你可以购买一些VPN账号来直接访问外网，我自己这么弄只不过是为了折腾而已。</p>
<p>我也是网上找教程的时候，无意中看到了这么个服务器搭建VPS的，因为具有<strong>一年的免费期</strong>当时就想拿来折腾用，至于好坏我们暂且不论。</p>
<h4 id="条件："><a href="#条件：" class="headerlink" title="条件："></a>条件：</h4><ul>
<li>需要一张支持双币支付的信用卡</li>
<li>某宝购买的虚拟信用卡也可以激活，我没试过（道听途说）</li>
<li>一个AWS的账号<a id="more"></a>
<!--toc-->
<strong>注意：</strong></li>
</ul>
<p>a. AWS激活的时候，采用的是电话激活（speaking English）,当时懵圈了我三遍才激活，账号注册请自行百度。<br>b. AWS并不是真正的For Free,这里需要先提醒一下大家，而且AWS扣费的时候，甚至不用通过短信验证，如介意，请出门左转。</p>
<h2 id="创建实例："><a href="#创建实例：" class="headerlink" title="创建实例："></a>创建实例：</h2><p>参考文章：<br><a href="https://segmentfault.com/a/1190000003101075" target="_blank" rel="external">科学上网之搭建shadowsock</a></p>
<p>以下命令摘自以上文章：</p>
<pre><code>sudo -s //获取root权限
apt-get install update //更新apt
apt-get install python-pip //安装py管理包pip
pip install shadowsocks //安装shadowsock
</code></pre><p><strong>注意：</strong><br>很多人都会在这一步产生错误，如遇错误请先更新你的python</p>
<p><code>python update</code></p>
<p>按照原文教程，直接叫你启动 <code>ssserver -c /etc/shadowsock.json -d start</code>这里也会报错，因为安装完shadowsocks后服务器并不会自动生成shadowsocks.json的文件。</p>
<p>正确的做法是你应该先建立：<br><code>vi /etc/shadowsocks.json</code></p>
<h4 id="单一端口配置："><a href="#单一端口配置：" class="headerlink" title="单一端口配置："></a>单一端口配置：</h4><pre><code>{
&quot;server&quot;:&quot;0.0.0.0&quot;, //这里不需要修改为你的服务器IP
    &quot;server_port&quot;:   //端口自定义，例如8338
    &quot;local_address&quot;:&quot;127.0.0.1&quot;,  //默认不用修改
    &quot;local_port&quot;:1080, &quot;password&quot;:   //密码自己设定
    &quot;timeout&quot;:300,  //可以默认
    &quot;method&quot;:&quot;aes-256-cfb&quot;,  //默认
    &quot;fast_open&quot;:false // 默认
}
</code></pre><h4 id="多端口配置"><a href="#多端口配置" class="headerlink" title="多端口配置"></a>多端口配置</h4><pre><code>{
&quot;server&quot;:&quot;0.0.0.0&quot;,
&quot;port_password&quot;:
         {
        &quot;端口1&quot;: &quot;连接密码1&quot;,
        &quot;端口2&quot; : &quot;连接密码2&quot;
         },
&quot;timeout&quot;:300,
&quot;method&quot;:&quot;aes-256-cfb&quot;,
&quot;fast_open&quot;: false
}
</code></pre><p>配置完成后，别着急，很多时候，你的VPN并不一定可以运行，在文章开始之前，因为我建VPN已经有一段时间了，所以有些东西一下没有总结到位，在你配置完你的AWS后，（我的服务器选择放在了日本Tokyo），在你获得你的公网IP后，应该先到你的控制台ping一下你的IP是否可以 ping通。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-156044dd14627044.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ping失败"></p>
<p>无法ping通的Ip是无法用来架设的，你必须更换你的IP，所以你只打算拿AWS做VPN的话，没有必要申请弹性IP，国内过段时间久可能把你可以ping通的Ip封掉，所以你又得换。AWS更换IP的方法就是关闭你的VPS，再重新开机就会给你重新分配IP</p>
<p>完成后，检测一下配置是否成功</p>
<p><code>netstat -tunlp</code><br><code>ssserver -c /etc/shadowsock.json -d start</code></p>
<p><strong>注：</strong></p>
<p>有些文章里写道    <code>ssserver -c /etc/shadowsocks/config.json -d start</code></p>
<p>是因为他将配置文件布置在了相应的目录下。</p>
<p>详细参考：<br><a href="http://ilanni.blog.51cto.com/526870/1682881" target="_blank" rel="external">http://ilanni.blog.51cto.com/526870/1682881</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解AWS搭建shadowsock VPN&lt;/p&gt;
&lt;h2 id=&quot;为什么选择AWS&quot;&gt;&lt;a href=&quot;#为什么选择AWS&quot; class=&quot;headerlink&quot; title=&quot;为什么选择AWS&quot;&gt;&lt;/a&gt;为什么选择AWS&lt;/h2&gt;&lt;p&gt;作为一名程序员，因为经常需要查找各类文档以及框架的用法，所以很多时候都需要去看看外面的世界，当然你可以购买一些VPN账号来直接访问外网，我自己这么弄只不过是为了折腾而已。&lt;/p&gt;
&lt;p&gt;我也是网上找教程的时候，无意中看到了这么个服务器搭建VPS的，因为具有&lt;strong&gt;一年的免费期&lt;/strong&gt;当时就想拿来折腾用，至于好坏我们暂且不论。&lt;/p&gt;
&lt;h4 id=&quot;条件：&quot;&gt;&lt;a href=&quot;#条件：&quot; class=&quot;headerlink&quot; title=&quot;条件：&quot;&gt;&lt;/a&gt;条件：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;需要一张支持双币支付的信用卡&lt;/li&gt;
&lt;li&gt;某宝购买的虚拟信用卡也可以激活，我没试过（道听途说）&lt;/li&gt;
&lt;li&gt;一个AWS的账号
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器搭建：（二）SSH登录详解</title>
    <link href="http://yoursite.com/2016/12/07/ftp2/"/>
    <id>http://yoursite.com/2016/12/07/ftp2/</id>
    <published>2016-12-07T08:44:44.000Z</published>
    <updated>2017-01-05T08:43:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解SSH登录Ubuntu服务器以及SSH登录Sftp</p>
<h2 id="SSH生成"><a href="#SSH生成" class="headerlink" title="SSH生成"></a>SSH生成</h2><p>使用过Git的人对这个部分很好理解，在Linux和Unix中都可以通过<br><code>ssh-keygen -t rsa -C //生成秘钥</code></p>
<ul>
<li>Mac下会保存在系统根目录下的.ssh目录下</li>
<li>Windows下会保存在你的C盘，用户下.ssh目录下</li>
</ul>
<p>一般服务器都会叫你新生成秘钥，我所用的腾讯云与AWS是不一样的（后面再讲AWS）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-ae4814a011057aac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="腾讯云秘钥生成"></p>
<p>在<strong>SSH秘钥</strong>选项下，新建秘钥便会提示你下载，将秘钥下载到本地即可。<br>为了便于管理，请注意将秘钥文件妥善保存，一般好像过了十分钟之后，便不再提供下载了。当然也有另外一种方式再生成秘钥，这个有空再说。</p>
<p><strong>注：</strong>新建秘钥后需要与服务器进行关联，否则无法使用。</p>
<p>下载到本地后，如果在Mac下比较方便，Mac登录请参考以下文章</p>
<ul>
<li><a href="http://www.jianshu.com/p/5f9e62bdc0bd" target="_blank" rel="external">MAC下登录服务器踩坑日记</a></li>
</ul>
<p>此文重点讲Windows下SSH登录。</p>
<a id="more"></a>
<!--toc-->
<h2 id="SSH登录Ubuntu"><a href="#SSH登录Ubuntu" class="headerlink" title="SSH登录Ubuntu"></a>SSH登录Ubuntu</h2><p>因Windows是无法识别秘钥文件的，所以需要以下几个步骤来完成：<br>参考文献：</p>
<ul>
<li><a href="https://www.qcloud.com/document/product/213/5436" target="_blank" rel="external">登录LInux实例</a></li>
</ul>
<h5 id="安装Windows远程登录软件"><a href="#安装Windows远程登录软件" class="headerlink" title="安装Windows远程登录软件"></a>安装Windows远程登录软件</h5><p>从本地 Windows 机器登录到 Linux 云服务器时，需要使用客户端软件建立连接。这里以使用 PUTTY 为例，参考下载地址：<a href="http://www.putty.nl/download.html%E3%80%82" target="_blank" rel="external">http://www.putty.nl/download.html。</a>分别下载putty.exe及puttygen.exe两个文件。</p>
<h5 id="密钥格式转换"><a href="#密钥格式转换" class="headerlink" title="密钥格式转换"></a>密钥格式转换</h5><p>打开 puttygen.exe，点击【Load】按钮，在弹窗中首先进入您存放先决条件中下载下来的私钥的路径，然后选择“All File（<em>.</em>）”，选择下载好的私钥（例子中为文件david，david是密钥的名称），点击【打开】。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-3e650529a12a2c86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="转换秘钥"></p>
<p>在 key comment 栏中输入密钥名，输入加密私钥的密码（可选），点击【Save private key】，在弹窗中选择您存放密钥的目录，然后在文件名栏输入 密钥名 +”.ppk”，点击【保存】按钮。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-acf8d49927019f52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="秘钥命名"></p>
<h5 id="登录远程Linux云服务器"><a href="#登录远程Linux云服务器" class="headerlink" title="登录远程Linux云服务器"></a>登录远程Linux云服务器</h5><p>打开putty.exe，进入【Auth】配置。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-191f0e72ae49fb48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录Linux"></p>
<p>点击【Browse】按钮，打开弹窗后进入密钥存储的路径，并选择密钥，点击【打开】，返回配置界面，进入【Session】配置。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-572a63b1b7f6e9b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录Linux1"></p>
<p>在Session配置页中，配置服务器的IP，端口，连接类型。</p>
<p>请注意此部分操作，一定注意安全组port(端口)已经开放，否则无法登录。</p>
<h5 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h5><ul>
<li>登录遇到 denied key</li>
</ul>
<p>解决方案：<br>putty进入命令行模式<br><code>cd G:/git/ //秘钥保存目录</code><br><code>chmod 400/600 test.ppk  //秘钥文件</code><br>就是更改SSH文件的权限，对Linux文件权重不理解的童鞋自行百度。</p>
<ul>
<li>待补充</li>
</ul>
<h2 id="SSH登录Sftp"><a href="#SSH登录Sftp" class="headerlink" title="SSH登录Sftp"></a>SSH登录Sftp</h2><p>只要拿到了上文里的SSH文件，登录sftp就很简单啦。</p>
<p>上传服务器比较需要注意的是：在腾讯云下，系统默认目录下的/home/ubuntu是不需要系统提供特殊的权限就可以读写的，以Mac下的Transmit为例说明：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2741993-9e4515db7989f94b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Transmit"></p>
<p>【To Be Continue!】</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解SSH登录Ubuntu服务器以及SSH登录Sftp&lt;/p&gt;
&lt;h2 id=&quot;SSH生成&quot;&gt;&lt;a href=&quot;#SSH生成&quot; class=&quot;headerlink&quot; title=&quot;SSH生成&quot;&gt;&lt;/a&gt;SSH生成&lt;/h2&gt;&lt;p&gt;使用过Git的人对这个部分很好理解，在Linux和Unix中都可以通过&lt;br&gt;&lt;code&gt;ssh-keygen -t rsa -C //生成秘钥&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac下会保存在系统根目录下的.ssh目录下&lt;/li&gt;
&lt;li&gt;Windows下会保存在你的C盘，用户下.ssh目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般服务器都会叫你新生成秘钥，我所用的腾讯云与AWS是不一样的（后面再讲AWS）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2741993-ae4814a011057aac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;腾讯云秘钥生成&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;SSH秘钥&lt;/strong&gt;选项下，新建秘钥便会提示你下载，将秘钥下载到本地即可。&lt;br&gt;为了便于管理，请注意将秘钥文件妥善保存，一般好像过了十分钟之后，便不再提供下载了。当然也有另外一种方式再生成秘钥，这个有空再说。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;新建秘钥后需要与服务器进行关联，否则无法使用。&lt;/p&gt;
&lt;p&gt;下载到本地后，如果在Mac下比较方便，Mac登录请参考以下文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/5f9e62bdc0bd&quot;&gt;MAC下登录服务器踩坑日记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此文重点讲Windows下SSH登录。&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器搭建：（一）</title>
    <link href="http://yoursite.com/2016/12/07/ftp1/"/>
    <id>http://yoursite.com/2016/12/07/ftp1/</id>
    <published>2016-12-07T07:30:09.000Z</published>
    <updated>2017-01-05T08:41:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文以我自己所经历的搭建服务器过程为基础，另外以及自己查找服务器搭建的的文献一起总结所写，所以全部内容只具有参考性。</p>
<h1 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h1><h4 id="云服务器概念"><a href="#云服务器概念" class="headerlink" title="云服务器概念"></a>云服务器概念</h4><p>云服务器（Elastic Compute Service, 简称ECS）是一种处理能力可弹性伸缩的计算服务，其管理方式比物理服务器更简单高效。云服务器帮助您快速构建更稳定、安全的应用，降低开发运维的难度和整体IT成本，使您能够更专注于核心业务的创新。简单来说就是云服务器用了云这种技术来让电脑做服务支持，它比普通服务器那种技术超前先进，所以更快更好更安全，当然也会比普通的贵。</p>
<p>总的来看 ，云服务器相当于就是搭建在远程的一台独立电脑。</p>
<p>一直以来我都是用的腾讯云的服务器（CVM），暂时对别的服务器没怎么了解，另外用过AWS的EC-2搭建了VPS。所以知识有限，只能把自己的一些经验写出来，供大家交流讨论。</p>
<h4 id="为什么购买云服务器"><a href="#为什么购买云服务器" class="headerlink" title="为什么购买云服务器"></a>为什么购买云服务器</h4><ul>
<li>对于普通人来讲，服务器没有什么太多的用处，哪怕对于普通程序员来讲，在服务器上所能做的一般就是：</li>
</ul>
<ol>
<li>搭建私人远程云空间，类似百度网盘等；</li>
<li>架设网站服务器，建网站或者是私人博客；</li>
<li>架设VPN去Wall外面的世界看一看，感觉这个对Programmer比较重要，因为现阶段许多的Document以及Frame都是由Foreigner所写的。</li>
</ol>
<ul>
<li>对于企业级的服务器，暂时还没有了解那么多，有空再写</li>
</ul>
<ul>
<li>其实现阶段服务器的价格话，相对来讲还算比较便宜，当然货比三家，有好也有坏，刚开始对阿里云服务器比较感兴趣，但阿里的价格还是高过腾讯，最后，本着测试的心理选了腾讯云。</li>
</ul>
<a id="more"></a>
<!--toc-->
<h4 id="云服务器的管理"><a href="#云服务器的管理" class="headerlink" title="云服务器的管理"></a>云服务器的管理</h4><p>前面讲到云服务器相当于远程PC的话，那云服务器也可以运行现阶段的Linux（主）Windows等系统，另外还有Centos，云服务因为其有限的配置及资源，所以要求要提高服务器的性能的话，就会舍弃掉图形界面的功能，所以对不是很了解Linux与Unix的人来讲，就不是很友好。</p>
<p>就现阶段我所了解的登录服务器方式：</p>
<ul>
<li>密码登录，</li>
<li>ssh秘钥登录（主）</li>
</ul>
<p>我想以ssh秘钥为主密码辅助的登录是现在的主要方式。在你选购云服务器的时候，你可以挑选自己的云服务器系统，以及其他的一些配置，有一些免费的，也有一些收费的，具体以个人需求为准。我个人选择的是Ubuntu，纯粹因为个人对其稍微熟悉一点。而且系统是可以不断重装的，所以万一你觉得你选的系统不好，一样可以将其换掉。</p>
<p>云服务器的文件图形管理界面的方式：</p>
<ul>
<li>Sftp</li>
<li>ftp </li>
</ul>
<p>在MAC下运用transmit比较友好，在WINDOWS下，目前我所用的Winscp比较好用。在图形界面管理下很多情况都会因为权限不足而影响操作，建议大家多多熟悉Linux操作。</p>
<p>【To Be Continue!】</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文以我自己所经历的搭建服务器过程为基础，另外以及自己查找服务器搭建的的文献一起总结所写，所以全部内容只具有参考性。&lt;/p&gt;
&lt;h1 id=&quot;云服务器&quot;&gt;&lt;a href=&quot;#云服务器&quot; class=&quot;headerlink&quot; title=&quot;云服务器&quot;&gt;&lt;/a&gt;云服务器&lt;/h1&gt;&lt;h4 id=&quot;云服务器概念&quot;&gt;&lt;a href=&quot;#云服务器概念&quot; class=&quot;headerlink&quot; title=&quot;云服务器概念&quot;&gt;&lt;/a&gt;云服务器概念&lt;/h4&gt;&lt;p&gt;云服务器（Elastic Compute Service, 简称ECS）是一种处理能力可弹性伸缩的计算服务，其管理方式比物理服务器更简单高效。云服务器帮助您快速构建更稳定、安全的应用，降低开发运维的难度和整体IT成本，使您能够更专注于核心业务的创新。简单来说就是云服务器用了云这种技术来让电脑做服务支持，它比普通服务器那种技术超前先进，所以更快更好更安全，当然也会比普通的贵。&lt;/p&gt;
&lt;p&gt;总的来看 ，云服务器相当于就是搭建在远程的一台独立电脑。&lt;/p&gt;
&lt;p&gt;一直以来我都是用的腾讯云的服务器（CVM），暂时对别的服务器没怎么了解，另外用过AWS的EC-2搭建了VPS。所以知识有限，只能把自己的一些经验写出来，供大家交流讨论。&lt;/p&gt;
&lt;h4 id=&quot;为什么购买云服务器&quot;&gt;&lt;a href=&quot;#为什么购买云服务器&quot; class=&quot;headerlink&quot; title=&quot;为什么购买云服务器&quot;&gt;&lt;/a&gt;为什么购买云服务器&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;对于普通人来讲，服务器没有什么太多的用处，哪怕对于普通程序员来讲，在服务器上所能做的一般就是：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;搭建私人远程云空间，类似百度网盘等；&lt;/li&gt;
&lt;li&gt;架设网站服务器，建网站或者是私人博客；&lt;/li&gt;
&lt;li&gt;架设VPN去Wall外面的世界看一看，感觉这个对Programmer比较重要，因为现阶段许多的Document以及Frame都是由Foreigner所写的。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;对于企业级的服务器，暂时还没有了解那么多，有空再写&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;其实现阶段服务器的价格话，相对来讲还算比较便宜，当然货比三家，有好也有坏，刚开始对阿里云服务器比较感兴趣，但阿里的价格还是高过腾讯，最后，本着测试的心理选了腾讯云。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
  </entry>
  
</feed>
